{"mappings":"kpBAsBA,IAAuBA,EACDC,mJArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,uLCAlD,MAAMC,EAAa,CACxBC,SAAU,CACRC,SAAU,WACVC,aAAc,WACdC,SAAU,uBACVC,UAAW,uDACXC,IAAK,GACLC,eAAgB,QAElBC,MAAO,CACLN,SAAU,QACVC,aAAc,QACdC,SAAU,qBACVC,UAAW,oDACXC,IAAK,GACLC,eAAgB,QAElBE,OAAQ,CACNP,SAAU,SACVC,aAAc,WACdC,SAAU,oCACVC,UAAW,uDACXC,IAAK,GACLC,eAAgB,UAIPG,EAAoB,CAC/BC,gBAAiB,CACf,CACEC,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,MAGZC,cAAe,CACb,CACEF,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,MAGZE,aAAc,CACZ,CACEH,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,MAGZG,WAAY,CACV,CACEJ,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,MAGZI,cAAe,CACb,CACEL,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,MAGZK,YAAa,CACX,CACEN,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,KAEV,CACED,KAAM,WACNC,OAAQ,OAKDM,EAAiB,CAC5B,aACA,YACA,aACA,aAIWC,EAAoB,CAC/BC,KAAM,CACJC,KAAM,KACNC,MAAO,QAETC,OAAQ,CACNF,KAAM,EACNC,MAAO,UAETE,KAAM,CACJH,KAAM,GACNC,MAAO,SASqBvB,EAAWC,SAASI,cC3HpDqB,4BAbsBC,GAElB,OADAC,aAAaC,QAAQ,WAAY/B,KAAKgC,UAAUH,IACzCA,wBAIP,OACE7B,KAAKC,MAAM6B,aAAaG,QAAQ,cAChCC,KAAKC,aAAavB,wBCDxBwB,sBARIF,KAAKG,SAAW,GAChBH,KAAKI,gBFkI+B,SEjIpCJ,KAAKL,SAAWD,EAAoBW,eACpCL,KAAKM,oBAAsBZ,EAC3BM,KAAKO,eAAYC,eCTmBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTnD,OAAOsD,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOC,EAGNF,MCFTO,WAVyBC,EAAeC,GACtCA,EAASC,SAASC,IACK,iBAAVA,EACTH,EAAcI,YAAYC,SAASC,eAAeH,IAElDH,EAAcI,YAAYD,WCMhCI,WATwBC,EAAMC,EAAa,MAAOR,GAChD,MAAMS,EAAaL,SAASM,cAAcH,GAK1C,OAJAnE,OAAOuE,QAAQH,GAAYP,SAAO,EAAGT,EAAKC,MACxCgB,EAAWG,aAAapB,EAAKC,MAE/BK,EAAgBW,EAAYT,GACrBS,OCOTI,EAbyBC,GAMhBR,EACL,IACA,CAAES,MAAO,oBAAoB,SAPb,CAChBhE,SAAU,iCACVO,MAAO,oCACPC,OAAQ,oCAKWuD,MCTvB,MAAME,EAAY,OAyBlBC,WAVsBC,EAAaC,GACjC,MAAMC,EAAQd,EAAe,MAAO,CAClCe,MAAO,2CACPC,IAAG,GAAKH,MAIV,OAFAH,EAAUO,IAAMH,EAlBD,CAAIF,IAMnB,IAHS,+FAGDM,KAAKN,KAAW,OAAYM,KAAKN,GAGvC,MAAM,IAAIzE,MAAM,4CAFhBuE,EAAUO,IAAIX,aAAa,MAAOM,IAYpCO,CAAYP,GACLE,SChBTM,EANoB,CAClBpB,EAAe,SAAU,CAAEe,MAAO,UAAY,YAC9Cf,EAAe,SAAU,CAAEe,MAAO,UAAY,UAC9Cf,EAAe,SAAU,CAAEe,MAAO,UAAY,UCLhDM,EAAc,IAAAC,IAAuBlF,EAAA,SAAAmF,QAA6C,SAAOC,OAAAC,KAAAC,KAAGC,eCS5FC,EALgB,IACF5B,EAAe,MAAO,CAAE6B,IAAKC,EAAAT,GAAMN,MAAO,yBCgExDgB,WAlEoBC,GAiClB,MAAMC,aA/BJ,MAAMC,EAAcF,EAASG,mBACvBC,EAAc,GACpB,IAAK,IAAIrG,EAAI,EAAGA,EAAImG,EAAYlG,OAAQD,IAAK,CAC3C,MAAMsG,EAAUH,EAAYnG,GACtBqB,EAAOiF,EAAQC,cACdC,OAACA,GAAWF,EACbG,EAAYH,EAAQI,YAEpBC,EAAY1C,EAChB,KACA,CAAEe,MAAO,eACTJ,EAAa6B,EAAW,0BAEpBF,EAAetC,EAAe,KAAM,CAAEe,MAAO,eAAiB3D,GAC9DuF,EAAgB3C,EACpB,KACA,CAAEe,MAAO,eACTwB,GAEIK,EAAS5C,EACb,KACA,CAAEe,MAAO,eACT2B,EACAJ,EACAK,GAEFP,EAAYS,KAAKD,GAEnB,OAAOR,EAGKU,GAERC,EAAY/C,EAAe,QAAS,MAAOiC,GAI3Ce,EADe,CAAC,UAAW,cAAe,UACNC,KAAKC,GACzBlD,EAClB,KACA,CACEe,MAAO,eAETmC,KAIEC,EAAenD,EACnB,KACA,CAAEe,MAAO,qBACNiC,GAGCI,EAAYpD,EAAe,QAAS,GAAImD,GAS9C,OARiBnD,EACf,QACA,CACEe,MAAO,kBAETqC,EACAL,QC7CJM,WAjBsBrB,GACpB,MAAMsB,EAAgBtD,EACpB,MACA,CAAEe,MAAO,eACT,gBAGIwC,EAAWxB,EAAWC,GAO5B,OANyBhC,EACvB,MACA,CAAEe,MAAO,WACTuC,EACAC,QC+BJC,aA3CE,MAAMC,EAAazD,EACjB,QACA,CACEe,MAAO,eACP2C,YAAa,gBACbzD,KAAM,OACN7C,KAAM,OACNnB,GAAI,aACJ0H,SAAU,MAEZ,SAGIC,EAAkB5D,EACtB,QACA,CACEe,MAAO,eACP8C,IAAK,QAEP,uDAGIC,EAAc9D,EAClB,SACA,CAAEe,MAAO,sCACT,2BAEIgD,EAAmB/D,EACvB,MACA,CAAEe,MAAO,kBACT0C,EACAK,GAUF,OAP6B9D,EAC3B,MACA,CAAEe,MAAO,eACT6C,EACAG,QC4BJC,WAjEqBhC,GAEnB,MAAMiC,EAAcjE,EAClB,KACA,CAAEe,MAAO,iBACT,aAEImD,EAAYlE,EAChB,IACA,CAAEe,MAAO,wBA2BOiB,GAClB,MAAMmC,EAAenC,EAASoC,mBACxBC,EAAYrC,EAASsC,eAC3B,IAAIC,EAAO,GACX,QAAQ,GACN,KAAKJ,GAAe,GAClBI,EAAI,gBAAmBJ,OAAkBE,mFACvC,MAEJ,KAAKF,IAAgB,IAAOA,EAAe,EACzCI,EAAI,gBAAmBJ,OAAkBE,gKACrC,MAEN,KAAKF,GAAgB,GAAKA,EAAe,GACvCI,EAAI,gBAAmBJ,OAAkBE,4DACvC,MAEJ,KAAKF,GAAgB,GACnBI,EAAI,gBAAmBJ,OAAkBE,gGACzC,cAGAE,EAAI,6BAAgCJ,KAAgBE,iCAIxD,OAAOE,EApDLC,CAAWxC,IAIPyC,EAAmBpB,EAAarB,GAGhC0C,EAAqBlB,IAGrBmB,EAAiB3E,EACrB,MACA,CACEe,MAAO,oBAGTkD,EACAC,EACAO,EACAC,GAIF,OAFc1E,EAAe,MAAO,CAAEe,MAAO,SAAW4D,QCF1DC,EA5BmBpE,IACjB,MAMMqE,EAAY7E,EAAe,OAAQ,CACvCe,MAAO,qCAiBT,MADyB,CAbLf,EAClB,KACA,CAAEe,MAAO,2BACT8D,EACA,cAGgB7E,EAChB,IACA,CAAEe,MAAO,yBAAyB,wHAnBd,CACpBtE,SAAU,gCACVO,MAAO,qCACPC,OAAQ,sCAiB4BuD,sCChBxCsE,WARoBP,GAMlB,OALsBvE,EACpB,SACA,CAAEe,MAAO,qCACTwD,ICNJQ,EAAc,IAAAzD,IAAuBlF,EAAA,SAAAmF,QAA6C,SAAOC,OAAAC,KAAAC,KAAGC,eCa5FqD,aAHE,OANchF,EAAe,MAAO,CAClC6B,IAAKC,EAAAiD,GACLhE,MAAO,4BACPC,IAAK,6BCYTiE,WAjByBV,GACvB,MAAMW,EAAWlF,EAAe,OAAQ,CACtCe,MAAO,oCAYT,OATkBf,EAChB,SACA,CACEe,MAAO,kCAETmE,EACAX,QCgEJY,EA9DmF,SAE/D3E,EAAMzC,EAAOqH,EAAOC,GACtC,MAAMC,EAAUpH,EAAoBW,eAE9B0G,EAAc,CAClBD,EAAQE,cACRF,EAAQnI,gBACRmI,EAAQhI,eAEJmI,EAAY,CAChBH,EAAQI,YACRJ,EAAQ7H,cACR6H,EAAQ5H,aAEJiI,EAAW,CACfL,EAAQM,WACRN,EAAQ/H,aACR+H,EAAQ9H,YAGJqI,EAAQrF,EAAKsF,cACbC,EAAShI,EAAM+H,cACrB,IAAIE,EAYAC,EAWAC,EArBJ,GAAe,SAAXH,EACFC,EAAgB,OACX,GAAe,WAAXD,EACTC,EAAgB,MACX,CAAA,GAAe,SAAXD,EAGT,MAAM5J,MAAM,oBAFZ6J,EAAgB,EAMlB,GAAc,UAAVH,EACFI,EAAeN,OACV,GAAc,aAAVE,EACTI,EAAeV,MACV,CAAA,GAAc,WAAVM,EAGT,MAAM1J,MAAM,mBAFZ8J,EAAeR,EAMjB,GAAc,MAAVL,EACFc,EAAgB,OACX,GAAc,MAAVd,EACTc,EAAgB,MACX,CAAA,GAAc,MAAVd,EAGT,MAAMjJ,MAAM,oBAFZ+J,EAAgB,EAKlB,GAAKF,KAAiBC,EAAaD,GAAehK,OAASkK,GAEpD,OAAOD,EAAaD,GAAeE,GAAeb,aCelDc,EAA2B3F,EAAMzC,EAAOqH,GAC/C,MAA+C,KAA3CD,EAAW3E,EAAMzC,EAAOqH,EAAO,QAC1B,gBAEFD,EAAW3E,EAAMzC,EAAOqH,EAAO,YAGxCgB,WA7FkB5F,EAAMzC,GACtB,GAAc,SAAVA,EAAkB,CAMpB,OALgBiC,EACd,IACA,CAAEe,MAAO,qBACT,yCAKJ,MAAMsF,EAAarG,EACjB,KACA,CAAEe,MAAO,qBACT,SAEIuF,EAAatG,EACjB,KACA,CAAEe,MAAO,qBACT,UAEIwF,EAAavG,EACjB,KACA,CAAEe,MAAO,qBACT,UAGIyF,EAAmBxG,EACvB,KACA,GACAA,EAAe,KAAM,CAAEe,MAAO,oBAAsB,KACpDf,EACE,KACA,CAAEe,MAAO,sBAAsB,GAC5BoF,EAA2B3F,EAAMzC,EAAO,QAE7CiC,EACE,KACA,CAAEe,MAAO,wBAAwB,GAC9BoE,EAAW3E,EAAMzC,EAAO,IAAK,cAG9B0I,EAAmBzG,EACvB,KACA,GACAA,EAAe,KAAM,CAAEe,MAAO,oBAAsB,KACpDf,EACE,KACA,CAAEe,MAAO,sBAAsB,GAC5BoF,EAA2B3F,EAAMzC,EAAO,QAE7CiC,EACE,KACA,CAAEe,MAAO,wBAAwB,GAC9BoE,EAAW3E,EAAMzC,EAAO,IAAK,cAG9B2I,EAAmB1G,EACvB,KACA,GACAA,EAAe,KAAM,CAAEe,MAAO,oBAAsB,KACpDf,EACE,KACA,CAAEe,MAAO,sBAAsB,GAC5BoF,EAA2B3F,EAAMzC,EAAO,QAE7CiC,EACE,KACA,CAAEe,MAAO,wBAAwB,GAC9BoE,EAAW3E,EAAMzC,EAAO,IAAK,cAepC,OAXmBiC,EACjB,QACA,CAAEe,MAAO,cACTsF,EACAC,EACAC,EACAC,EACAC,EACAC,QChEJC,EAhByB,CAAInG,EAAMzC,KACjC,MAAM6I,EAAU5G,EAAe,OAAQ,CACrCe,MAAO,6BAWT,MADuB,CAPLf,EAChB,KACA,CAAEe,MAAO,2BACT6F,EAAO,IACHpG,0BAA6BzC,KAGAqI,EAAS5F,EAAMzC,SCKpD8I,WAlB0BC,GACxB,MAAMC,EAAMC,KAAKC,MAAMH,EAAgB,IACjCI,EAAMJ,EAAgB,GAEtBK,EAAQnH,EAAe,IAAK,CAAEe,MAAO,qBAW3C,OATI+F,GAAiB,KACnBK,EAAM1G,MAAM2G,MAAQ,WAIpBD,EAAME,UADJP,EAAgB,IAAMA,EAAgB,IAAO,EAChC,cAAiBC,OAASG,KAE1B,cAAiBH,MAAQG,KAEnCC,OCGTG,EAlBqB,CACnBtH,EACE,SACA,CAAEe,MAAO,yCACT,qCAEFf,EACE,SACA,CAAEe,MAAO,gDACT,qEAEFf,EACE,SACA,CAAEe,MAAO,yCACT,0ECSJwG,EAjBG,SAEqB3K,GACtB,MAAM4K,EAAU,GAWhB,OAVA5K,EAAS6K,QAAQ9H,SAAO,CAAE+H,EAAQC,KAChCH,EAAQ3E,KACN7C,EACE,SACA,CAAEe,MAAO,6BACTnE,EAAS6K,QAAQE,QAKhBH,OClBTI,WAJqBC,GACnBA,EAAM5E,KAAK6E,GAASA,EAAKC,UAAUC,OAAO,mBCD5CC,EAAc,IAAA3G,IAAuBlF,EAAA,SAAAmF,QAA6C,SAAOC,OAAAC,KAAAC,KAAGC,eCe5FuG,EAb+B,CAC7BlI,EACE,IACA,CAAEe,MAAO,yBACT,+HAEFf,EACE,IACA,CAAEe,MAAO,yBAAyB,2FCAtCoH,WAR+B5D,GAM7B,OAL6BvE,EAC3B,SACA,CAAEe,MAAO,yCACTwD,QCuRJ6D,QA/PEC,OAAOC,KAAU5I,GACf,GAAwB,IAApBA,EAAS1D,SAAiBsM,EAC5B,MAAM,IAAInM,MAAM,sDAElB,MAAMoM,EAAazI,SAAS0I,cAAcF,GAE1C,GADAC,EAAWE,UAAY,IAClBF,EACH,MAAM,IAAIpM,MAAK,8BAA+BmM,KAEhD9I,EAAgB+I,EAAY7I,GAG9BgJ,sBACElK,KAAK6J,OAAO,qBAAsBzG,KAClCpD,KAAK6J,OAAO,uBAAwBjH,GACpC5C,KAAK6J,OAAO,c9B4EsB,0B8B3ElC7J,KAAK6J,OAAO,uBAAwBH,GACpC1J,KAAK6J,OAAO,uBAAwBrD,KAiBtC2D,mBACEnK,KAAK6J,OACH,uBChEgC9D,GACpC,MAAMM,EAAY7E,EAAe,OAAQ,CACvCe,MAAO,4CAWT,OARsBf,EACpB,SACA,CACEe,MAAO,mCAET8D,EACAN,GDsDEqE,CAAc,SACd9D,EAAW,kBAcf+D,eACErK,KAAK6J,OAAO,cAAe,gBAC3B7J,KAAK6J,OAAO,uBAAwBf,GACpC,MAAMwB,EAAiBX,EAAsB,aAC7CW,EAAeC,iBAAiB,QAASvK,KAAKwK,oBAC9CxK,KAAK6J,OAAO,oBAAqBS,GACjCtK,KAAKyK,0BAA0BC,OAAOC,IAAIC,uBAG5CC,eACE7K,KAAK8K,uBAAuBJ,OAAOC,IAAII,MAAM5K,UAC7CuK,OAAOC,IAAIK,wBACXhL,KAAKiL,eAAiB,eAaxBC,YAAY5C,EAAe6C,GACzBnL,KAAK6J,OAAO,0BEzGoBuB,EAAUC,GAC5C,MAAMC,EAAe9J,EAAe,MAAO,CACzCe,MAAO,6BAGHD,EAAQd,EAAe,MAAO,CAClCe,MAAO,oBACPc,IAAKC,EAAAmG,GACLjH,IAAK,0BAGD+I,EAAY/J,EAAe,MAAO,CACtCe,MAAO,2BAGHiJ,EAAOhK,EACX,MACA,CACEe,MAAO,oBAETgJ,GAYIE,EAAW,CATGjK,EAClB,MACA,CACEe,MAAO,4BAETD,EACAkJ,GAG6BF,GAG/B,GAAiB,IAAbF,EACFG,EAAUtJ,MAAMyJ,MAAQ,SACnB,CACL,MAAMC,EAAiBP,EAAWC,EAAa,IAE/CE,EAAUtJ,MAAMyJ,MAAK,GAAMC,KAG7B,OAAOF,EF8DyBG,CAAYtD,EAAe6C,IACzDnL,KAAK6J,OAAO,4BAA6BxB,EAAiBC,IAG5DuD,YAAYrI,GACVxD,KAAK6J,OAAO,SAAUrE,EAAYhC,IACpBlC,SAAS0I,cAAc,UAC/BT,UAAUC,OAAO,iBAKzBsC,cACE9L,KAAK6J,OAAO,uBAAwB1H,KAGtC4J,sBAAsBhI,GACpB,MAAMiI,EAAc1K,SAAS2K,iBAAiB,+BAC/B,IAAXlI,EACFiI,EAAY7K,SAAS+K,GACnBA,EAAG3C,UAAU4C,IAAI,uCAGnBH,EAAY7K,SAAS+K,GACnBA,EAAG3C,UAAU4C,IAAI,qCAKvBC,iBACEpM,KAAK6J,OAAO,+BGvId,MAAMwC,EAAW7K,EAAe,IAAK,CACnCe,MAAO,wBAGH+J,EAAe9K,EACnB,IACA,CACEe,MAAO,mBAET,aAUF,OAPuBf,EACrB,MACA,CAAEe,MAAO,aACT+J,EACAD,GHuHiCE,IAGnCC,eAAepO,EAAUqO,GACvBzM,KAAK6J,OAAO,cAAe4C,GAC3BzM,KAAK6J,OAAO,uBAAwBd,EAAe3K,IACnD4B,KAAK6J,OACH,uBACA1H,EAAa/D,EAASkE,MAAO,wBAIjCoK,gCAC4BpL,SAAS0I,cAAc,eAE/B/H,MAAM0K,QAAU,OACXrL,SAAS0I,cAAc,qBAE/B/H,MAAM0K,QAAU,OACLrL,SAAS0I,cAAc,qBAC/BvM,GAAK,gBAGzBmP,6BACE5M,KAAK6M,2BAA2B,cAAe,mBAC/C7M,KAAK6M,2BAA2B,oBAAqB,mBACrD7M,KAAK8M,+BAA+B,oBAAqB,MAG3DC,uBACuBzL,SAAS0I,cAAc,SAC/BT,UAAU4C,IAAI,iBACR7K,SAAS0I,cAAc,WAC/BT,UAAU4C,IAAI,iBAG3Ba,kBACsB1L,SAAS0I,cAAc,iBAC/B/H,MAAMgL,iBAAmB,cAGvCC,kBACqB5L,SAAS0I,cAAc,qBAC/B/H,MAAMkL,eAAiB,WAGpCC,oBAAoB7N,GAClB,GAAIA,IAAUH,EAAkBC,KAAKE,MAAO,CAC1C,MAAM8N,EAAY/L,SAAS0I,cAAc,6BACzCqD,EAAU7D,OAAO6D,GACjB,MAAMC,EAAYhM,SAAS0I,cAAc,qBACzCsD,EAAU9D,OAAO8D,GAEnBtN,KAAK6J,OAAO,uBAAwBjH,GACpC5C,KAAK6M,2BAA2B,QAAS,iBACzC7M,KAAK6M,2BAA2B,UAAW,iBAC3C7M,KAAK8M,+BAA+B,oBAAqB,SACzD9M,KAAK8M,+BAA+B,gBAAiB,SACrD9M,KAAK8M,+BAA+B,cAAe,SACnD9M,KAAK8M,+BAA+B,oBAAqB,SACzD9M,KAAK6J,OAAO,uBAAwBrD,KAGtCsG,+BAA+B9C,EAAgB,GAAIuD,EAAY,IAC7CjM,SAAS0I,cAAcA,GAC/BwD,gBAAgBD,GAG1BV,2BAA2BY,EAAgB,GAAIC,EAAsB,IACnDpM,SAAS0I,cAAcyD,GAC/BlE,UAAUC,OAAOkE,GAK3BC,eAAeC,GACMtM,SAAS0I,cAAc,yBAC/BO,iBAAiB,SAAO,KACjCqD,OAIJC,gBAAgBC,GACdlL,EAAY6B,KAAKyE,GACfA,EAAOqB,iBAAiB,SAAO,KAC7BnB,EAAYxG,GACZsG,EAAOK,UAAU4C,IAAI,UACrB2B,EAAQ5E,EAAO6E,YAAYzG,oBAKjC0G,kBAAkBC,GACM,IACjB3M,SAAS4M,uBAAuB,8BAEvBzJ,KAAKyE,GACjBA,EAAOqB,iBAAiB,SAAO,KAC7B0D,EAAQ/E,EAAO6E,kBAKrBI,mBAAmBC,GACO9M,SAAS0I,cAAc,cAC/BO,iBAAiB,SAAO,KACtC6D,OAIJC,cAAcC,GACMhN,SAAS0I,cAAc,sBAC/BO,iBAAiB,SAAO,KAChC+D,OAIJC,gBAAgBC,GACMlN,SAAS0I,cAAc,uBAC/BO,iBAAiB,SAAO,KAClCiE,OAKJ/D,0BAA0BgE,GACxB3F,EAAarE,KAAG,CAAEyE,EAAQC,IACxBD,EAAOqB,iBAAiB,SAAO,KAC7BnB,EAAYN,GACZI,EAAOK,UAAU4C,IAAI,UACrBsC,EAAQtF,QAKduF,gBAAgBC,GACd,MAAMrJ,EAAchE,SAAS0I,cAAc,0BACrC4E,EAAQtN,SAAS0I,cAAc,UAErC1E,EAAYiF,iBAAiB,SAAO,KAClCoE,EAAQrN,SAASuN,eAAe,cAAclO,OAC9CiO,EAAMrF,UAAU4C,IAAI,iBACpBnM,KAAKkK,8CAtOT,0BAA0BlI,IACxBhC,KAAK6J,OAAO,cAAe9H,EAAgBC,IAC3ChC,KAAK6J,OAAO,uBAAwBzD,EAAUpE,IAC9ChC,KAAK6J,OACH,cACApD,EAAe,gBACfH,EAAW,kBAEb,MAAMgE,EAAiBX,EAAsB,YAC7CW,EAAeC,iBAAiB,QAASvK,KAAKwK,oBAC9CxK,KAAK6J,OAAO,oBAAqBS,GACjCtK,KAAK8O,UAAW,YAYlB,WAAO,CAAI3O,EAAUC,KACnBJ,KAAK6J,OAAO,cAAe,gBAC3B7J,KAAK6J,OACH,uBACG1B,EAAoBhI,EAAUC,IAEnCJ,KAAKmK,6BAkBP,sBAAkB,KACXnK,KAAK8O,UAIR9O,KAAK6K,eACL7K,KAAK8O,UAAW,IAJhB9O,KAAKqK,eACLrK,KAAK8O,UAAW,MA3ElB9O,KAAKiL,eAAiB,eACtBjL,KAAK8O,UAAW,UI1BdC,0BACoBC,GAEtB,OAAOxG,KAAKC,MAAMD,KAAKyG,UAAYD,EADrB,EAC0C,GAD1C,0CAIuBE,GACrC,MACMC,EAAe,GAErB,GACED,EAJiC,GAKhB,iBAAVA,EAEP,MAAMvR,KAAK,yEAPsB,oBAOgGuR,+CAAwDA,IAG3L,IAAK,IAAI/F,EAAQ,EAAGA,EAVe,EAUqBA,GAAS,EAAG,CAClE,IAAI1L,KAEFA,EAAKsR,EAAkBK,iBAAiBF,UACH,IAA9BC,EAAaE,SAAS5R,IAC/B0R,EAAa9K,KAAK5G,GAGpB,OAAO0R,6BAGkBG,EAAc,IAOvC,GANAA,EAAYnO,SAAS0C,IACnB,GAAuB,iBAAZA,EACT,MAAMlG,KAAK,6BAIY,IAAvB2R,EAAY9R,OACd,MAAMG,KAAK,qCAAqC2R,EAAY9R,kBACvD,CACL,MAAM+R,EAAW,EACXC,EAAW,EAKjB,OADoBF,EAHN9G,KAAKC,MACjBD,KAAKyG,UAAYO,EAAWD,EAAW,GAAKA,UAQpDE,EAAeV,MCwCfW,QApEEC,iBACE,OAAO3P,KAAK4P,mBAGdC,cAAcD,GACZ,IAAIE,EAAmB,GAWvB,MAV4B,UAAxB9P,KAAKzB,eACPuR,EAAmB3Q,EAEnBa,KAAK+P,SAAS5O,SAAS0C,IACrB,MAAMpD,EAAMmP,EAAmB/L,IACxBjF,KAACA,GAAS6B,EACjBqP,EAAiBzL,KAAKzF,MAInBkR,qBAGUE,GACjB,OAAO,IAAIC,SAAO,CAAElN,EAASmN,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAS,IAAStN,EAAQoN,EAAOtR,QACxCsR,EAAOG,cAAcN,sCAKvB,MAAMvP,EAAMT,KAAK4P,mBAAmB5P,KAAKuQ,iBACb,UAAxBvQ,KAAKzB,eACPyB,KAAKwQ,YAAc/P,EAAIgQ,MAEvBzQ,KAAKwQ,YAAc/P,EAAI7B,KAEzB,MAAM8R,QAAoBC,MAAK,gBACb3Q,KAAK7B,gBAAgB6B,KAAKuQ,uBAEtCK,QAAgBF,EAAYV,OAElChQ,KAAK6Q,oBAAsB7Q,KAAK8Q,aAAaF,wBAI7C,IACE,GAC8B,OAA5B5Q,KAAK4P,yBACuBpP,IAA5BR,KAAK4P,oBAC8B,IAAnC5P,KAAK4P,mBAAmBpS,OAExBwC,KAAK+Q,4BAA8B/Q,KAAK6P,cAAc7P,KAAK+P,gBAErD/P,KAAKgR,8BACN,CACL,MAAMC,QAAiBN,MAAM3Q,KAAKkR,mBAC5BC,QAAiBF,EAASG,OAChCpR,KAAK4P,mBAAqBuB,EAC1BnR,KAAK+Q,4BAA8B/Q,KAAK6P,cACtC7P,KAAK4P,0BAGD5P,KAAKgR,2BAEb,MAAOK,GACP,MAAM1T,MAAK,GAAI0T,kBAhFjBH,EACAX,EACAhS,EACAJ,EACA4R,EAAW,IAEX/P,KAAKuQ,gBAAkBA,EACvBvQ,KAAKkR,kBAAoBA,EACzBlR,KAAKzB,eAAiBA,EACtByB,KAAK7B,aAAeA,EACpB6B,KAAK+P,SAAWA,EAChB/P,KAAK4P,mBAAqB,GAC1B5P,KAAKwQ,YAAc,GACnBxQ,KAAK6Q,cAAgB,GACrB7Q,KAAK+Q,4BAA8B,SCkCvCO,4BArCI,MAAMC,EAAc9B,EAAkB+B,gCACpCxR,KAAKyR,aAEDC,EACJjC,EAAkBkC,oBAAoBJ,GAElCK,EAAc,IAAIlC,EACtB1P,KAAK3B,UACLqT,EACA1R,KAAKzB,eACLyB,KAAK7B,aACLoT,SAEIK,EAAYC,eAClB,MAAOd,4BAACA,EAA2BP,YAAEA,EAAWK,cAAEA,GAChDe,EACF5R,KAAK8R,wBAA0BF,EAAYjC,iBAQ3C,MANiB,CACfrN,MAAOuO,EACP5H,QAAS8H,cACTP,GAMJuB,oBACE,GAAI/R,KAAK8R,wBAAwBtU,OAAS,EACxC,OAAOwC,KAAK8R,wBAEd,MAAMnU,MACJ,wFAzCQqU,GACVhS,KAAK3B,UAAYL,EAAWgU,GAAmB3T,UAC/C2B,KAAKyR,YAAczT,EAAWgU,GAAmB1T,IACjD0B,KAAKzB,eAAiBP,EAAWgU,GAAmBzT,eACpDyB,KAAK7B,aAAeH,EAAWgU,GAAmB7T,aAClD6B,KAAK8R,wBAA0B,cCRnBG,EACdC,EACAC,EACAC,GAEA,IAAIC,EAEJ,MAAMC,EACJF,IAA6BhT,EAAkBI,OAAOD,MAClDgT,EAAaH,IAA6BhT,EAAkBK,KAAKF,MACvE,IAAK+S,IAAiBC,EACpB,MAAM,IAAI5U,MACR,8DAYJ,OARI2U,IACFD,EAAWF,EAAkBD,EAAsB,EAAIA,GAErDK,IACFF,EAAWF,EACPD,EAAsB,EACtBA,EAAsB,GAErBG,QCtBIG,EAMXC,uBACExO,EACAH,EACAK,EACAiO,GAEA,IAAKtO,EACH,MAAM,IAAInG,MACR,wFAGJ,MAAMwU,EAAkBrO,IAAiBK,EAezC,OAbIiO,IAA6BhT,EAAkBC,KAAKE,QACtDS,KAAKkS,oBAAsBD,EACzBjS,KAAKkS,oBACLC,EACAC,GAEFpS,KAAK0S,eACHzO,EACAE,EACAL,EACAqO,IAGGA,EAGTO,eAAeC,EAAaC,EAAeC,EAAcV,GACvDnS,KAAK2D,mBAAmBU,KAAK,aAC3BsO,eACAE,kBACAV,EACApO,OAAQ6O,IAIZE,gBACE9S,KAAKkS,oBAAsB,EAC3BlS,KAAK2D,mBAAmBnG,OAAS,EAGnCuV,uBACE,MAAO,CACLb,oBAAqBlS,KAAKkS,oBAC1BvO,mBAAoB3D,KAAK2D,kCAlD3B3D,KAAKkS,oBAAsB,EAC3BlS,KAAK2D,mBAAqB,QC6B9BqP,QA5BEC,YAAYC,GACVlT,KAAKmT,SAAWD,EAGlBE,SAASC,EAAoBC,GAC3BtT,KAAKuT,UAAW,EAChB,MAAMC,EvCmIwB,GuClI5BxT,KAAKmT,SvCgIsB,IuC/HvBM,EvCiIwB,GuCjIPzT,KAAKmT,SAE5B,IAAI/H,EAAWoI,EAEf,MAAM7K,EAAQ+K,aAAW,KACvB,IAAsB,IAAlB1T,KAAKuT,SACPI,cAAchL,GACdyC,EAAWoI,OACN,GAAIpI,GAAY,EACrBuI,cAAchL,GACdyC,EAAWoI,EACXF,QACK,CACLlI,GvCkHyB,IuChHzBiI,EADsBjI,EvCiHG,IuChHSqI,MvCgHT,iBuC5InBN,GACVnT,KAAKmT,SAAWA,EAChBnT,KAAKuT,UAAW,QCuDpBK,+BAtCI,OAJA5T,KAAK6T,qBAAuB7T,KAAK8T,oBAAoBC,cAClB,IAA/B/T,KAAKgU,eAAexW,SACtBwC,KAAKgU,eAAiBhU,KAAK8T,oBAAoBhC,yBAE1C9R,KAAK6T,eAGdI,wBAAwBZ,EAAoBC,GAC1CtT,KAAKkU,OAAS,IAAI1B,EAC4C,OAA1DpT,EAAkBY,KAAKoS,0BAA0B9S,OACnDU,KAAK2I,MAAQ,IAAIqK,EACf5T,EAAkBY,KAAKoS,0BAA0B9S,MAEnDU,KAAK2I,MAAMyK,SAASC,EAAoBC,IAI5Cb,uBAAuB1O,GAOrB,OANwB/D,KAAKkU,OAAOzB,uBAClCzS,KAAK6T,eAAevR,MACpByB,EACA/D,KAAK6T,eAAerD,YACpBxQ,KAAKoS,0BAKT+B,iBACE,MAAMC,EAAqBpU,KAAKkU,OAAOnB,uBACvC,MAAO,CACLnN,mBAAoBwO,EAAmBlC,oBACvCvO,mBAAoByQ,EAAmBzQ,mBACvCmC,eAAgBsO,EAAmBzQ,mBAAmBnG,QAI1D6W,uBACErU,KAAKkU,OAAOpB,gBACZ9S,KAAK2I,MAAM4K,UAAW,cAjDZvB,EAAmBI,GAC7BpS,KAAK8T,oBAAsB,IAAIxC,EAAoBU,GACnDhS,KAAKoS,yBAA2BA,EAChCpS,KAAK2I,MAAQ,IAAIqK,ExC2IO,IwC1IxBhT,KAAKkU,OAAS,IAAI1B,EAClBxS,KAAKsU,uBAAyB,EAC9BtU,KAAKgU,eAAiB,GACtBhU,KAAK6T,eAAiB,KCV1B,MAMMU,EAAM,+BCiDR,MAAOnW,SAACA,GAAaJ,EAAWgC,KAAK+K,MAAM5K,SAASmH,eACpDtH,KAAKwU,KAAKhI,qBACFxM,KAAK+K,MAAMxK,UAAUkU,iBAC3BrW,GAEF,MAAMsW,EAAU1U,KAChBA,KAAKwU,KAAKxG,mBAAiB2G,MAAQ5Q,IACjC,MAAMoO,EACJuC,EAAQ3J,MAAMxK,UAAUkS,uBAAuB1O,GACjD/D,KAAKwU,KAAKzI,sBAAsBoG,SAC1BuC,EAAQE,kBAyClBC,qBACE7U,KAAKwU,KAAKnK,eAGZyK,qCAAqCC,GACnC/U,KAAKwU,KAAKM,qCAAqCC,GAGjDC,aACE,MAAOrV,SAACA,EAAQf,KAAEA,EAAIuB,SAAEA,EAAQC,gBAAEA,GAAoBJ,KAAK+K,MACrDlM,EAASmB,KAAKiV,YAAYrP,mBAC1B5D,EAAI,GAAM7B,KAAYC,IAE5BT,EAASqC,GAAMqC,KAAK,MAAEzF,SAAMC,IAC5Bc,EAASqC,GAAMkT,MAAI,CAAEC,EAAGC,IAAOD,EAAEtW,OAASuW,EAAEvW,OAAS,GAAI,IACrDc,EAASqC,GAAMxE,OAAS,GAAGmC,EAASqC,GAAMqT,MAC9CrV,KAAK+K,MAAMzK,oBAAoBL,aAAaN,eA3HlCoL,EAAOyJ,UAYnB,gBAAY,CAAIlM,EAAe6C,KAC7BnL,KAAKwU,KAAKtJ,YAAY5C,EAAe6C,aAGvC,WAAO,KACLnL,KAAKiV,YAAcjV,KAAK+K,MAAMxK,UAAU4T,iBACxCnU,KAAKwU,KAAK3I,YAAY7L,KAAKiV,aAC3BjV,KAAKwU,KAAK9F,gBAAgB1O,KAAKsV,UAC/BtV,KAAKwU,KAAK5H,6BACV5M,KAAKwU,KAAKpH,gCAGZ,YAAYxO,IACVoB,KAAK+K,MAAMnM,KAAOA,EAClBoB,KAAKgV,uBAGP,aAASL,UACP3U,KAAK+K,MAAMxK,UAAY,IAAIqT,EACzB5T,KAAK+K,MAAM5K,SACXH,KAAK+K,MAAM3K,iBAEbJ,KAAK+K,MAAMxK,UAAU0T,wBACnBjU,KAAKuV,aACLvV,KAAKwV,eAESxV,KACF4U,eACd5U,KAAKwU,KAAK9H,gCACV1M,KAAKwU,KAAKpI,iBACVpM,KAAKwU,KAAKrG,mBAAmBnO,KAAKyV,iBAClCzV,KAAKwU,KAAKzH,uBACV/M,KAAKwU,KAAKxH,kBACVhN,KAAKwU,KAAKtH,4BAGZ,mBAAe,KACblN,KAAK+K,MAAMxK,UAAU8T,uBACrBrU,KAAK0V,eAAe1X,EAAWgC,KAAK+K,MAAM5K,UAAUjC,SAASoJ,eAC7DtH,KAAKwU,KAAK5H,6BACV5M,KAAKwU,KAAKpH,oBAAoBpN,KAAK+K,MAAM3K,2BAkB3C,kBAAkB4B,IAChB,MAAMzC,EAAQS,KAAK+K,MAAM3K,gBACzBJ,KAAK+K,MAAM5K,SAAW6B,EAAKsF,cACM,iBAA7BtH,KAAKwU,KAAKvJ,gBACZjL,KAAKwU,KAAK1J,uBAAuB9I,EAAMzC,GACvCS,KAAKgL,yBAELhL,KAAK2V,wBAIT,kBAAc,KACqB,iBAA7B3V,KAAKwU,KAAKvJ,gBACZjL,KAAK2V,cACL3V,KAAKwU,KAAKvJ,eAAiB,SACW,UAA7BjL,KAAKwU,KAAKvJ,iBACnBjL,KAAK4V,yBACL5V,KAAKwU,KAAKvJ,eAAiB,0BAI/B,yBAAqB,KACnBjL,KAAKwU,KAAKnG,cAAcrO,KAAKiL,gBAC7BjL,KAAKwU,KAAK7G,eAAe3N,KAAK6V,qBAGhC,2BAAuB,KACrB7V,KAAKwU,KAAKjG,gBAAgBvO,KAAKiL,gBAC/BjL,KAAKwU,KAAK7G,eAAe3N,KAAK6V,qBAGhC,yBAAyBC,IACvB,MACMvW,EADSjC,OAAOD,KAAK+B,GACN0W,GACrB9V,KAAK+K,MAAM3K,gBAAkBhB,EAAkBG,GAAOA,gBAsBxD,eAAW,KACTS,KAAKwU,KAAKuB,QAAQ/V,KAAK+K,MAAM5K,SAAUH,KAAK+K,MAAM3K,iBAClDJ,KAAKgW,oCAGP,0BAAsB,KACpBhW,KAAKwU,KAAK1J,uBAAuB9K,KAAK+K,MAAM5K,UAC5CH,KAAKwU,KAAK3G,gBAAgB7N,KAAK0V,gBAC/B1V,KAAKgL,kCAGP,mBAAe,KACbhL,KAAKwU,KAAK3G,gBAAgB7N,KAAK0V,mBAzI/B1V,KAAK+K,MAAQA,EACb/K,KAAKwU,KAAOA,EACZxU,KAAKiV,YAAc,GAGnBjV,KAAKwU,KAAKtK,sBACVlK,KAAK6N,oBDNK,IAAI3N,EAGL,IAAI0J,GAMjBc,OAAOuL,OAAM,IAAS1B,EAGtB7J,OAAOC,IAAM4J","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e4d36eea674b0b29.js","src/app/data/consts.js","src/app/logic/localStorage.js","src/app/logic/model.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/src/_define_property.js","src/app/utils/elementInjector.js","src/app/utils/elementCreator.js","src/app/view/components/questionForMode.js","src/app/view/components/displayImage.js","src/app/view/components/mainMenu.js","node_modules/@parcel/runtime-js/lib/runtime-dc1b36ab561fbd1b.js","src/app/view/components/createLogo.js","src/app/view/components/modal/modalTable.js","src/app/view/components/modal/modalDetails.js","src/app/view/components/modal/modalForm.js","src/app/view/components/modal/modalWindow.js","src/app/view/components/modeRules.js","src/app/view/components/buttonPlay.js","node_modules/@parcel/runtime-js/lib/runtime-938558ca5cab0189.js","src/app/view/components/createImage.js","src/app/view/components/doBtnHallOfFame.js","src/app/view/components/getHofData.js","src/app/view/components/hofTable.js","src/app/view/components/doHallOfFameContent.js","src/app/view/components/displayTimerText.js","src/app/view/components/settingsLevel.js","src/app/view/components/answersButtons.js","src/app/utils/clearActive.js","node_modules/@parcel/runtime-js/lib/runtime-611e62d82f72bbbe.js","src/app/view/components/displayInitialMainText.js","src/app/view/components/displaySettingsBtn.js","src/app/view/view.js","src/app/view/components/buttonRules.js","src/app/view/components/wand.js","src/app/view/components/displayQuitGameButton.js","src/app/logic/questionGenerator.js","src/app/logic/dataManager.js","src/app/logic/mainQuestionManager.js","src/app/logic/calculatePoints.js","src/app/logic/player.js","src/app/logic/timer.js","src/app/logic/gameMaker.js","src/index.js","src/app/controller/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"a8wOx\\\":\\\"index.9a4583ab.js\\\",\\\"dQfNS\\\":\\\"logo.17197f16.png\\\",\\\"e0CGT\\\":\\\"0.767e2972.jpg\\\",\\\"iWnx8\\\":\\\"wand.cfd8417e.png\\\"}\"));","export const GAME_MODES = {\n  students: {\n    gamemode: 'Students',\n    imgSubfolder: 'students',\n    question: 'Who is this student?',\n    urlAdress: 'https://hp-api.herokuapp.com/api/characters/students',\n    ids: 28,\n    answerProperty: 'name',\n  },\n  staff: {\n    gamemode: 'Staff',\n    imgSubfolder: 'staff',\n    question: 'Who is this staff?',\n    urlAdress: 'https://hp-api.herokuapp.com/api/characters/staff',\n    ids: 20,\n    answerProperty: 'name',\n  },\n  houses: {\n    gamemode: 'Houses',\n    imgSubfolder: 'students',\n    question: 'From which house is this student?',\n    urlAdress: 'https://hp-api.herokuapp.com/api/characters/students',\n    ids: 28,\n    answerProperty: 'house',\n  },\n};\n\nexport const RANKINGS_TEMPLATE = {\n  students_medium: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n  students_hard: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n  staff_medium: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n  staff_hard: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n  houses_medium: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n  houses_hard: [\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n    {\n      name: 'unranked',\n      result: '0',\n    },\n  ],\n};\n\nexport const HOGWART_HOUSES = [\n  'Gryffindor',\n  'Slytherin',\n  'Hufflepuff',\n  'Ravenclaw',\n];\n\nexport const INITIAL_GAME_MODE_TEXT = 'Harry Potter Quiz Game';\nexport const DIFFICULTY_LEVELS = {\n  easy: {\n    time: null,\n    level: 'easy',\n  },\n  medium: {\n    time: 1,\n    level: 'medium',\n  },\n  hard: {\n    time: 0.5,\n    level: 'hard',\n  },\n};\nexport const DEFAULT_DIFFICULTY_LEVEL = 'medium';\n\n// export const INITIAL_GAME_MODE_TEXT = 'Choose category';\n\n// export const INITIAL_MAIN_TEXT = displayInitialMainText();\n\nexport const DEFAULT_BASE_URL = GAME_MODES.students.urlAdress;\n\nexport const ONE_SECOND_MILLIS = 1000;\n\nexport const ONE_MINUTE_SECONDS = 60;\n\nexport const DECIMAL_SYSTEM = 10;\n\nexport const DEFAULT_TIME = 0.5; // in minutes\n","import { RANKINGS_TEMPLATE } from '../data/consts';\n\nclass LocalStorageService {\n  // eslint-disable-next-line no-useless-constructor,no-empty-function\n  constructor() {}\n\n  static saveRankings(rankings) {\n    localStorage.setItem('rankings', JSON.stringify(rankings));\n    return rankings;\n  }\n\n  static loadRankings() {\n    return (\n      JSON.parse(localStorage.getItem('rankings')) ||\n      this.saveRankings(RANKINGS_TEMPLATE)\n    );\n  }\n}\n\nexport default LocalStorageService;\n","import { DEFAULT_DIFFICULTY_LEVEL } from '../data/consts';\nimport LocalStorageService from './localStorage';\n\nclass Model {\n  constructor() {\n    this.gameMode = '';\n    this.difficultyLevel = DEFAULT_DIFFICULTY_LEVEL;\n    this.rankings = LocalStorageService.loadRankings();\n    this.localStorageService = LocalStorageService;\n    this.gameMaker = undefined;\n  }\n}\n\nexport default Model;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","function elementInjector(parentElement, children) {\n  children.forEach((child) => {\n    if (typeof child === 'string') {\n      parentElement.appendChild(document.createTextNode(child));\n    } else {\n      parentElement.appendChild(child);\n    }\n  });\n}\n\nexport default elementInjector;\n","import elementInjector from './elementInjector';\n\nfunction elementCreator(type, attributes = {}, ...children) {\n  const newElement = document.createElement(type);\n  Object.entries(attributes).forEach(([key, value]) => {\n    newElement.setAttribute(key, value);\n  });\n  elementInjector(newElement, children);\n  return newElement;\n}\n\nexport default elementCreator;\n","import elementCreator from '../../utils/elementCreator';\n\nconst questionForMode = (mode) => {\n  const questions = {\n    students: \"Who is this Hogwart's student?\",\n    staff: \"Who is this from Hogwart's staff?\",\n    houses: 'To which house do they belong\\n?',\n  };\n  return elementCreator(\n    'p',\n    { style: 'font-weight: 500' },\n    `MODE: ${questions[mode]}`,\n  );\n};\n\nexport default questionForMode;\n","import elementCreator from '../../utils/elementCreator';\n\nconst imageNode = {};\n\nconst updateImage = (imageSource) => {\n  // Checking that img source is in base64 format\n  // FIXME: If we should use only base64/jpg, delete one condition in if\n  const reg =\n    /^data:image\\/(?:gif|png|jpeg|bmp|webp)(?:;charset=utf-8)?;base64,(?:[A-Za-z0-9]|[+/])+={0,2}/;\n\n  if (reg.test(imageSource) || /.jpg/.test(imageSource)) {\n    imageNode.ref.setAttribute('src', imageSource);\n  } else {\n    throw new Error('Ups, format of input string is incorrect');\n  }\n};\n\nfunction displayImage(imageSource, altDescription) {\n  const image = elementCreator('img', {\n    class: 'game-image__content-image modal-img-node',\n    alt: `${altDescription}`,\n  });\n  imageNode.ref = image;\n  updateImage(imageSource);\n  return image;\n}\n\nexport default displayImage;\n","import elementCreator from '../../utils/elementCreator';\n\nconst modeButtons = [\n  elementCreator('button', { class: 'button' }, 'Students'),\n  elementCreator('button', { class: 'button' }, 'Houses'),\n  elementCreator('button', { class: 'button' }, 'Staff'),\n];\n\nexport default modeButtons;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dQfNS\")).toString();","// eslint-disable-next-line import/no-absolute-path,import/no-unresolved\nimport logo from '../../../../static/assets/img/logo.png';\nimport elementCreator from '../../utils/elementCreator';\n\nconst createLogo = () => {\n  const img = elementCreator('img', { src: logo, class: 'header__game-img' });\n  return img;\n};\n\nexport default createLogo;\n","import elementCreator from '../../../utils/elementCreator';\nimport displayImage from '../displayImage';\n\nfunction modalTable(gameData) {\n  function getAnswersRows() {\n    const gameDetails = gameData.detailQuestionData;\n    const answersRows = [];\n    for (let i = 0; i < gameDetails.length; i++) {\n      const element = gameDetails[i];\n      const name = element.playerAnswer;\n      const { answer } = element;\n      const imageBase = element.imageBase64;\n\n      const imageCell = elementCreator(\n        'td',\n        { class: 'details__td' },\n        displayImage(imageBase, 'very handsome someone'),\n      );\n      const playerAnswer = elementCreator('td', { class: 'details__td' }, name);\n      const correctAnswer = elementCreator(\n        'td',\n        { class: 'details__td' },\n        answer,\n      );\n      const newRow = elementCreator(\n        'tr',\n        { class: 'details__tr' },\n        imageCell,\n        playerAnswer,\n        correctAnswer,\n      );\n      answersRows.push(newRow);\n    }\n    return answersRows;\n  }\n\n  const table = getAnswersRows(gameData);\n\n  const tableBody = elementCreator('tbody', {}, ...table);\n\n  // table headeer\n  const tableHeaders = ['Picture', 'Your answer', 'Answer'];\n  const tableHeadersElements = tableHeaders.map((header) => {\n    const tableHeader = elementCreator(\n      'th',\n      {\n        class: 'details__th',\n      },\n      header,\n    );\n    return tableHeader;\n  });\n  const tableHeadRow = elementCreator(\n    'tr',\n    { class: 'details__thead' },\n    ...tableHeadersElements,\n  );\n\n  const tableHead = elementCreator('thead', {}, tableHeadRow);\n  const newTable = elementCreator(\n    'table',\n    {\n      class: 'details__table',\n    },\n    tableHead,\n    tableBody,\n  );\n  return newTable;\n}\nexport default modalTable;\n","import elementCreator from '../../../utils/elementCreator';\nimport modalTable from './modalTable';\n\nfunction modalDetails(gameData) {\n  const detailsHeader = elementCreator(\n    'div',\n    { class: 'modal__text' },\n    'Game details',\n  );\n\n  const modalTab = modalTable(gameData);\n  const detailsContainer = elementCreator(\n    'div',\n    { class: 'details' },\n    detailsHeader,\n    modalTab,\n  );\n  return detailsContainer;\n}\n\nexport default modalDetails;\n","import elementCreator from '../../../utils/elementCreator';\n\nfunction modalForm() {\n  const modalInput = elementCreator(\n    'input',\n    {\n      class: 'modal__input',\n      placeholder: 'your nickname',\n      type: 'text',\n      name: 'name',\n      id: 'playerName',\n      required: null,\n    },\n    'Input',\n  );\n\n  const playerFormLabel = elementCreator(\n    'label',\n    {\n      class: 'modal__label',\n      for: 'name',\n    },\n    'Please fill your name to bring glory to your house!',\n  );\n\n  const modalButton = elementCreator(\n    'button',\n    { class: 'game__button game__button-modalBtn' },\n    'Save result and return!',\n  );\n  const modalFormBuilder = elementCreator(\n    'div',\n    { class: 'modal__builder' },\n    modalInput,\n    modalButton,\n  );\n\n  const modalFormConstructor = elementCreator(\n    'div',\n    { class: 'modal__form' },\n    playerFormLabel,\n    modalFormBuilder,\n  );\n\n  return modalFormConstructor;\n}\nexport default modalForm;\n","import elementCreator from '../../../utils/elementCreator';\nimport modalDetails from './modalDetails';\nimport modalForm from './modalForm';\n\nfunction ModalWindow(gameData) {\n  // parametry//\n  const modalHeader = elementCreator(\n    'h2',\n    { class: 'modal__header' },\n    'Game Over',\n  );\n  const modalText = elementCreator(\n    'p',\n    { class: 'modal__text' },\n    chooseText(gameData),\n  );\n\n  // DETAILS SECTION\n  const detailsContainer = modalDetails(gameData);\n\n  // FORMS SECTION\n  const modalFormContainer = modalForm();\n\n  // modalContainer construction //\n  const modalContainer = elementCreator(\n    'div',\n    {\n      class: 'modal__container',\n    },\n\n    modalHeader,\n    modalText,\n    detailsContainer,\n    modalFormContainer,\n  );\n  const modal = elementCreator('div', { class: 'modal' }, modalContainer);\n\n  return modal;\n}\n\nfunction chooseText(gameData) {\n  const playerPoints = gameData.correctAnswerScore;\n  const questions = gameData.askedQuestions;\n  let text = '';\n  switch (true) {\n    case playerPoints < -10:\n      text = `Your result: ${playerPoints} / ${questions}. \\n\"Honestly, if you were any slower, you'd be going backward.\" — Draco Malfoy`;\n      break;\n\n    case playerPoints >= -10 && playerPoints < 1:\n      text = `Your result: ${playerPoints} / ${questions}. \\n\"I hope you're pleased with yourselves. We could all have been killed — or worse, expelled. Now if you don't mind, I'm going to bed.\" ― Hermione Granger`;\n      break;\n\n    case playerPoints >= 1 && playerPoints < 11:\n      text = `Your result: ${playerPoints} / ${questions}. \\n\"When in doubt, go to the library.\" — Ron Weasley \" `;\n      break;\n\n    case playerPoints >= 11:\n      text = `Your result: ${playerPoints} / ${questions}. \\n\"You're a little scary sometimes, you know that? Brilliant ... but scary.\" — Ron Weasley`;\n      break;\n\n    default:\n      text = `This is magic! You've got ${playerPoints}/${questions}  questions! Congratulations!`;\n      break;\n  }\n\n  return text;\n}\n\nexport default ModalWindow;\n","import elementCreator from '../../utils/elementCreator';\n\nconst rulesTextBoiler =\n  'You have limited time to answer as many questions, as possible. During the game, on each question you need to select';\n\nconst modeRules = (mode) => {\n  const rulesTextPart = {\n    students: \"the name of Hogwart's student\",\n    staff: \"the name of Hogwart's staff member\",\n    houses: \"a Hogwart's house of the character\",\n  };\n\n  const rulesIcon = elementCreator('span', {\n    class: 'rules-icon fas fa-graduation-cap',\n  });\n\n  const rulesHeader = elementCreator(\n    'h2',\n    { class: 'game__mode-rules-header' },\n    rulesIcon,\n    'Mode Rules',\n  );\n\n  const rulesText = elementCreator(\n    'p',\n    { class: 'game__mode-rules-text' },\n    `${rulesTextBoiler} ${rulesTextPart[mode]} from available options.`,\n  );\n\n  const rulesFullElement = [rulesHeader, rulesText];\n  return rulesFullElement;\n};\n\nexport default modeRules;\n","import elementCreator from '../../utils/elementCreator';\n\nfunction buttonPlay(text) {\n  const buttonCreator = elementCreator(\n    'button',\n    { class: 'game__button game__button--orange' },\n    text,\n  );\n  return buttonCreator;\n}\nexport default buttonPlay;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"e0CGT\")).toString();","import elementCreator from '../../utils/elementCreator';\nimport harryPotterImg from '../../../../static/assets/img/images/students/0.jpg';\n\nfunction createImage() {\n  const image = elementCreator('img', {\n    src: harryPotterImg,\n    class: 'game-image__content-image',\n    alt: 'very handsome Harry',\n  });\n\n  return image;\n}\n\nexport default createImage;\n","import elementCreator from '../../utils/elementCreator';\n\nfunction doBtnHallOfFame(text) {\n  const imageCup = elementCreator('span', {\n    class: 'game__button-icon fas fa-trophy',\n  });\n\n  const hofButton = elementCreator(\n    'button',\n    {\n      class: 'game__button game__button--hof',\n    },\n    imageCup,\n    text,\n  );\n\n  return hofButton;\n}\n\nexport default doBtnHallOfFame;\n","import LocalStorageService from '../../logic/localStorage';\n\n// const _ranking = app.model.localStorageService.loadRankings();\n// const hofData = LocalStorageService.loadRankings();\n\n/* const arrStudents = [\n  hofData.students_easy,\n  hofData.students_medium,\n  hofData.students_hard,\n];\nconst arrHouses = [\n  hofData.houses_easy,\n  hofData.houses_medium,\n  hofData.houses_hard,\n];\nconst arrStaff = [hofData.staff_easy, hofData.staff_medium, hofData.staff_hard]; */\n\nfunction getHofData(mode, level, place, property) {\n  const hofData = LocalStorageService.loadRankings();\n\n  const arrStudents = [\n    hofData.students_easy,\n    hofData.students_medium,\n    hofData.students_hard,\n  ];\n  const arrHouses = [\n    hofData.houses_easy,\n    hofData.houses_medium,\n    hofData.houses_hard,\n  ];\n  const arrStaff = [\n    hofData.staff_easy,\n    hofData.staff_medium,\n    hofData.staff_hard,\n  ];\n\n  const _mode = mode.toLowerCase();\n  const _level = level.toLowerCase();\n  let selectedLevel;\n\n  if (_level === 'easy') {\n    selectedLevel = 0;\n  } else if (_level === 'medium') {\n    selectedLevel = 1;\n  } else if (_level === 'hard') {\n    selectedLevel = 2;\n  } else {\n    throw Error('Wrong level data');\n  }\n\n  let selectedMode;\n  if (_mode === 'staff') {\n    selectedMode = arrStaff;\n  } else if (_mode === 'students') {\n    selectedMode = arrStudents;\n  } else if (_mode === 'houses') {\n    selectedMode = arrHouses;\n  } else {\n    throw Error('Wrong mode data');\n  }\n\n  let selectedPlace;\n  if (place === '1') {\n    selectedPlace = 0;\n  } else if (place === '2') {\n    selectedPlace = 1;\n  } else if (place === '3') {\n    selectedPlace = 2;\n  } else {\n    throw Error('Wrong place data');\n  }\n\n  if (!selectedLevel || selectedMode[selectedLevel].length < selectedPlace) {\n    // optional console.log('No ranking data in local storage!');\n  } else return selectedMode[selectedLevel][selectedPlace][property];\n}\n\nexport default getHofData;\n","import elementCreator from '../../utils/elementCreator';\nimport getHofData from './getHofData';\n\nfunction hofTable(mode, level) {\n  if (level === 'easy') {\n    const altText = elementCreator(\n      'p',\n      { class: 'hof__table-alttxt' },\n      'Easy mode has no ranking available!!!',\n    );\n    return altText;\n  }\n\n  const tableHead1 = elementCreator(\n    'td',\n    { class: 'hof__table-header' },\n    'Place',\n  );\n  const tableHead2 = elementCreator(\n    'td',\n    { class: 'hof__table-header' },\n    'Player',\n  );\n  const tableHead3 = elementCreator(\n    'td',\n    { class: 'hof__table-header' },\n    'Points',\n  );\n\n  const tableRow1stPlace = elementCreator(\n    'tr',\n    {},\n    elementCreator('td', { class: 'hof__table-place' }, '1'),\n    elementCreator(\n      'td',\n      { class: 'hof__table-player1' },\n      `${getPlayerNameOrDefaultName(mode, level, '1')}`,\n    ),\n    elementCreator(\n      'td',\n      { class: 'hof__table-answered1' },\n      `${getHofData(mode, level, '1', 'result')}`,\n    ),\n  );\n  const tableRow2ndPlace = elementCreator(\n    'tr',\n    {},\n    elementCreator('td', { class: 'hof__table-place' }, '2'),\n    elementCreator(\n      'td',\n      { class: 'hof__table-player2' },\n      `${getPlayerNameOrDefaultName(mode, level, '2')}`,\n    ),\n    elementCreator(\n      'td',\n      { class: 'hof__table-answered2' },\n      `${getHofData(mode, level, '2', 'result')}`,\n    ),\n  );\n  const tableRow3rdPlace = elementCreator(\n    'tr',\n    {},\n    elementCreator('td', { class: 'hof__table-place' }, '3'),\n    elementCreator(\n      'td',\n      { class: 'hof__table-player3' },\n      `${getPlayerNameOrDefaultName(mode, level, '3')}`,\n    ),\n    elementCreator(\n      'td',\n      { class: 'hof__table-answered3' },\n      `${getHofData(mode, level, '3', 'result')}`,\n    ),\n  );\n\n  const wholeTable = elementCreator(\n    'table',\n    { class: 'hof__table' },\n    tableHead1,\n    tableHead2,\n    tableHead3,\n    tableRow1stPlace,\n    tableRow2ndPlace,\n    tableRow3rdPlace,\n  );\n\n  return wholeTable;\n}\n\nfunction getPlayerNameOrDefaultName(mode, level, place) {\n  if (getHofData(mode, level, place, 'name') === '') {\n    return 'Noname Muggle';\n  }\n  return getHofData(mode, level, place, 'name');\n}\n\nexport default hofTable;\n","import elementCreator from '../../utils/elementCreator';\nimport hofTable from './hofTable';\n\nconst doHallOfFameContent = (mode, level) => {\n  const cupIcon = elementCreator('span', {\n    class: 'rules-icon fas fa-trophy',\n  });\n\n  const hofHeader = elementCreator(\n    'h2',\n    { class: 'game__mode-rules-header' },\n    cupIcon,\n    ` ${mode} Mode Ranking - Level ${level}`,\n  );\n\n  const hofFullElement = [hofHeader, hofTable(mode, level)];\n  return hofFullElement;\n};\n\nexport default doHallOfFameContent;\n","import elementCreator from '../../utils/elementCreator';\n\nfunction displayTimerText(timeInSeconds) {\n  const min = Math.floor(timeInSeconds / 60);\n  const sec = timeInSeconds % 60;\n\n  const timer = elementCreator('p', { class: 'game-timer__text' });\n\n  if (timeInSeconds <= 20) {\n    timer.style.color = '#E23336';\n  }\n\n  if (timeInSeconds < 10 || timeInSeconds % 60 === 0) {\n    timer.innerText = `Time Left: ${min}m 0${sec}s`;\n  } else {\n    timer.innerText = `Time Left: ${min}m ${sec}s`;\n  }\n  return timer;\n}\n\nexport default displayTimerText;\n","import elementCreator from '../../utils/elementCreator';\n\nconst levelButtons = [\n  elementCreator(\n    'button',\n    { class: 'game__button game__button-lvlSettings' },\n    'Easy - unlimited time / no points',\n  ),\n  elementCreator(\n    'button',\n    { class: 'game__button game__button-lvlSettings active' },\n    'Medium - 1 minute / good answer: 1 point / wrong answer: 0 points',\n  ),\n  elementCreator(\n    'button',\n    { class: 'game__button game__button-lvlSettings' },\n    'Hard - 30 seconds / good answer: 1 point / wrong answer: -1 point',\n  ),\n];\n\nexport default levelButtons;\n","import elementCreator from '../../utils/elementCreator';\n\n/**\n * At this moment our parameter for this function is question\n * @param question\n * question as an object with answers property (answers as array)\n * this function create buttons and return an array of buttons\n * @returns {*[]}\n */\n\nfunction answersButtons(question) {\n  const buttons = [];\n  question.answers.forEach((button, index) => {\n    buttons.push(\n      elementCreator(\n        'button',\n        { class: 'game__mode-rules-answrBtn' },\n        question.answers[index],\n      ),\n    );\n  });\n\n  return buttons;\n}\n\nexport default answersButtons;\n","function clearActive(array) {\n  array.map((item) => item.classList.remove('active'));\n}\n\nexport default clearActive;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iWnx8\")).toString();","import elementCreator from '../../utils/elementCreator';\n\nconst displayInitialMainText = [\n  elementCreator(\n    'p',\n    { class: 'game__mode-rules-text' },\n    'Lets find out if you are true wizard or regular  muggle! Test yourself and check if you know all  of the Hogwart’s secrets.',\n  ),\n  elementCreator(\n    'p',\n    { class: 'game__mode-rules-text' },\n    `Pick the game mode from main menu and answer all the question we prepared for you.`,\n  ),\n];\n\nexport default displayInitialMainText;\n","import elementCreator from '../../utils/elementCreator';\n\nfunction displayButtonSettings(text) {\n  const createButtonSettings = elementCreator(\n    'button',\n    { class: 'game__button game__button-settingsBtn' },\n    text,\n  );\n  return createButtonSettings;\n}\nexport default displayButtonSettings;\n","import elementInjector from '../utils/elementInjector';\nimport questionForMode from './components/questionForMode';\nimport displayImage from './components/displayImage';\nimport modeButtons from './components/mainMenu';\nimport createLogo from './components/createLogo';\nimport ModalWindow from './components/modal/modalWindow';\nimport { DIFFICULTY_LEVELS, INITIAL_GAME_MODE_TEXT } from '../data/consts';\nimport modeRules from './components/modeRules';\nimport buttonPlay from './components/buttonPlay';\nimport createImage from './components/createImage';\nimport doBtnHallOfFame from './components/doBtnHallOfFame';\nimport doHallOfFameContent from './components/doHallOfFameContent';\nimport displayTimerText from './components/displayTimerText';\nimport doButtonRules from './components/buttonRules';\nimport levelButtons from './components/settingsLevel';\nimport answersButtons from './components/answersButtons';\nimport clearActive from '../utils/clearActive';\nimport displayQuitGameButton from './components/displayQuitGameButton';\nimport displayWand from './components/wand';\nimport displayInitialMainText from './components/displayInitialMainText';\nimport displayButtonSettings from './components/displaySettingsBtn';\n\nclass View {\n  // eslint-disable-next-line no-useless-constructor,no-empty-function\n  constructor() {\n    this.toggleRulesHof = 'hall of fame';\n    this.settings = false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render(query, ...children) {\n    if (children.length === 0 || !query) {\n      throw new Error('Required query and at least one child in arguments');\n    }\n    const parentElem = document.querySelector(query);\n    parentElem.innerHTML = '';\n    if (!parentElem) {\n      throw new Error(`Not found element by query ${query}`);\n    }\n    elementInjector(parentElem, children);\n  }\n\n  renderInitialScreen() {\n    this.render('.header__game-logo', createLogo());\n    this.render('.header__game-nav', ...modeButtons);\n    this.render('.game__mode', INITIAL_GAME_MODE_TEXT);\n    this.render('.game__mode-rules', ...displayInitialMainText);\n    this.render('.game-image__content', createImage());\n  }\n\n  showViewsForChosenMode = (mode) => {\n    this.render('.game__mode', questionForMode(mode));\n    this.render('.game__mode-rules', ...modeRules(mode));\n    this.render(\n      '.game__btns',\n      doBtnHallOfFame(`Hall of fame`),\n      buttonPlay('Play the game'),\n    );\n    const settingsButton = displayButtonSettings('settings');\n    settingsButton.addEventListener('click', this.toggleSettingsView);\n    this.render('.game-image__btns', settingsButton);\n    this.settings = false;\n  };\n\n  showRulesButtons() {\n    this.render(\n      '.game__btns',\n      doButtonRules('rules'),\n      buttonPlay('Play the game'),\n    );\n  }\n\n  // Hof - Hall of Fame\n  showHof = (gameMode, difficultyLevel) => {\n    this.render('.game__mode', 'HALL OF FAME');\n    this.render(\n      '.game__mode-rules',\n      ...doHallOfFameContent(gameMode, difficultyLevel),\n    );\n    this.showRulesButtons();\n  };\n\n  showSettings() {\n    this.render('.game__mode', 'Choose level');\n    this.render('.game__mode-rules', ...levelButtons);\n    const settingsButton = displayButtonSettings('Save&back');\n    settingsButton.addEventListener('click', this.toggleSettingsView);\n    this.render('.game-image__btns', settingsButton);\n    this.bindDifficultyLevelButton(window.app.changeDifficultyLevel);\n  }\n\n  hideSettings() {\n    this.showViewsForChosenMode(window.app.model.gameMode);\n    window.app.bindInitialHofAndPlay();\n    this.toggleRulesHof = 'hall of fame';\n  }\n\n  toggleSettingsView = () => {\n    if (!this.settings) {\n      this.showSettings();\n      this.settings = true;\n    } else {\n      this.hideSettings();\n      this.settings = false;\n    }\n  };\n\n  renderTimer(timeInSeconds, initialTime) {\n    this.render('.game-timer', ...displayWand(timeInSeconds, initialTime));\n    this.render('.game-timer__text-wrapper', displayTimerText(timeInSeconds));\n  }\n\n  renderModal(gameData) {\n    this.render('.modal', ModalWindow(gameData));\n    const modal = document.querySelector('.modal');\n    modal.classList.remove('modal__hidden');\n  }\n\n  // showModal() {}\n\n  renderImage() {\n    this.render('.game-image__content', displayImage());\n  }\n\n  changeAnswrBtnBgColor(answer) {\n    const posAnswrBtn = document.querySelectorAll('.game__mode-rules-answrBtn');\n    if (answer === true) {\n      posAnswrBtn.forEach((el) =>\n        el.classList.add('game__mode-rules-answrBtn-correct'),\n      );\n    } else {\n      posAnswrBtn.forEach((el) =>\n        el.classList.add('game__mode-rules-answrBtn-false'),\n      );\n    }\n  }\n\n  renderQuitGame() {\n    this.render('.header__game-nav', displayQuitGameButton());\n  }\n\n  renderQuestion(question, modeQuestion) {\n    this.render('.game__mode', modeQuestion);\n    this.render('.game__mode-rules', ...answersButtons(question));\n    this.render(\n      '.game-image__content',\n      displayImage(question.image, 'very handsome Harry'),\n    );\n  }\n\n  disappearButtonsAndBackground() {\n    const playAndHofButtons = document.querySelector('.game__btns');\n    // playAndHofButtons.classList.add('hidden-elements');\n    playAndHofButtons.style.display = 'none';\n    const settingsButton = document.querySelector('.game-image__btns');\n    // settingsButton.classList.add('hidden-elements');\n    settingsButton.style.display = 'none';\n    const gameModeContainer = document.querySelector('.game__mode-rules');\n    gameModeContainer.id = 'question-mode';\n  }\n\n  appearBackgroundAndButtons() {\n    this.removeClassFromHtmlElement('.game__btns', 'hidden-elements');\n    this.removeClassFromHtmlElement('.game-image__btns', 'hidden-elements');\n    this.removeAttributeFromHtmlElement('.game__mode-rules', 'id');\n  }\n\n  changeCursorToCustom() {\n    const customCursor = document.querySelector('.game');\n    customCursor.classList.add('custom-cursor');\n    const custCursor = document.querySelector('.header');\n    custCursor.classList.add('custom-cursor');\n  }\n\n  changeGridSizes() {\n    const changedGrid = document.querySelector('.game-wrapper');\n    changedGrid.style.gridTemplateRows = '1fr 2fr 1fr';\n  }\n\n  changeNavStyles() {\n    const changedNav = document.querySelector('.header__game-nav');\n    changedNav.style.justifyContent = 'flex-end';\n  }\n\n  renderAfterQuitGame(level) {\n    if (level !== DIFFICULTY_LEVELS.easy.level) {\n      const timerWand = document.querySelector('.game-timer__wand-wrapper');\n      timerWand.remove(timerWand);\n      const timerText = document.querySelector('.game-timer__text');\n      timerText.remove(timerText);\n    }\n    this.render('.header__game-nav', ...modeButtons);\n    this.removeClassFromHtmlElement('.game', 'custom-cursor');\n    this.removeClassFromHtmlElement('.header', 'custom-cursor');\n    this.removeAttributeFromHtmlElement('.header__game-nav', 'style');\n    this.removeAttributeFromHtmlElement('.game-wrapper', 'style');\n    this.removeAttributeFromHtmlElement('.game__btns', 'style');\n    this.removeAttributeFromHtmlElement('.game-image__btns', 'style');\n    this.render('.game-image__content', createImage());\n  }\n\n  removeAttributeFromHtmlElement(querySelector = '', attribute = '') {\n    const element = document.querySelector(querySelector);\n    element.removeAttribute(attribute);\n  }\n\n  removeClassFromHtmlElement(querySelector = '', classNameWithoutDot = '') {\n    const element = document.querySelector(querySelector);\n    element.classList.remove(classNameWithoutDot);\n  }\n\n  // -------------- BINDINGS ------------------------------------\n\n  bindButtonPlay(handler) {\n    const playButton = document.querySelector('.game__button--orange');\n    playButton.addEventListener('click', () => {\n      handler();\n    });\n  }\n\n  bindModeButtons(handler) {\n    modeButtons.map((button) =>\n      button.addEventListener('click', () => {\n        clearActive(modeButtons);\n        button.classList.add('active');\n        handler(button.textContent.toLowerCase());\n      }),\n    );\n  }\n\n  bindAnswerButtons(handler) {\n    const answerButtons = [\n      ...document.getElementsByClassName('game__mode-rules-answrBtn'),\n    ];\n    answerButtons.map((button) =>\n      button.addEventListener('click', () => {\n        handler(button.textContent);\n      }),\n    );\n  }\n\n  bindQuitGameButton(handler) {\n    const quitButtonEvent = document.querySelector('.quit-game');\n    quitButtonEvent.addEventListener('click', () => {\n      handler();\n    });\n  }\n\n  bindHofButton(handler) {\n    const hofButton = document.querySelector('.game__button--hof');\n    hofButton.addEventListener('click', () => {\n      handler();\n    });\n  }\n\n  bindRulesButton(handler) {\n    const rulesButton = document.querySelector('.game__button-rules');\n    rulesButton.addEventListener('click', () => {\n      handler();\n    });\n  }\n\n  // TODO: przeniesienie funkcji bindujących do controllera\n  bindDifficultyLevelButton(handler) {\n    levelButtons.map((button, index) =>\n      button.addEventListener('click', () => {\n        clearActive(levelButtons);\n        button.classList.add('active');\n        handler(index);\n      }),\n    );\n  }\n\n  bindModalButton(handler) {\n    const modalButton = document.querySelector('.game__button-modalBtn');\n    const modal = document.querySelector('.modal');\n\n    modalButton.addEventListener('click', () => {\n      handler(document.getElementById('playerName').value);\n      modal.classList.add('modal__hidden');\n      this.renderInitialScreen();\n    });\n  }\n}\n\nexport default View;\n","import elementCreator from '../../utils/elementCreator';\n\nexport default function doButtonRules(text) {\n  const rulesIcon = elementCreator('span', {\n    class: 'game__button-icon fas fa-graduation-cap',\n  });\n\n  const buttonCreator = elementCreator(\n    'button',\n    {\n      class: 'game__button game__button-rules',\n    },\n    rulesIcon,\n    text,\n  );\n  return buttonCreator;\n}\n","import elementCreator from '../../utils/elementCreator';\nimport img from '../../../../static/assets/img/wand.png';\n\nexport default function displayWand(timeLeft, timeStart) {\n  const timerWrapper = elementCreator('div', {\n    class: 'game-timer__text-wrapper',\n  });\n\n  const image = elementCreator('img', {\n    class: 'game-timer__image',\n    src: img,\n    alt: 'The shaft of the wand',\n  });\n\n  const wandInner = elementCreator('div', {\n    class: 'game-timer__wand-inner',\n  });\n\n  const wand = elementCreator(\n    'div',\n    {\n      class: 'game-timer__wand',\n    },\n    wandInner,\n  );\n\n  const wandWrapper = elementCreator(\n    'div',\n    {\n      class: 'game-timer__wand-wrapper',\n    },\n    image,\n    wand,\n  );\n\n  const fullWand = [wandWrapper, timerWrapper];\n\n  // const innerPart = document.getElementsByClassName('game-timer__wand-inner');\n  if (timeLeft === 0) {\n    wandInner.style.width = '0%';\n  } else {\n    const progressWidth = (timeLeft / timeStart) * 100;\n\n    wandInner.style.width = `${progressWidth}%`;\n  }\n\n  return fullWand;\n}\n","import elementCreator from '../../utils/elementCreator';\n\nexport default function displayQuitGameButton() {\n  const quitElem = elementCreator('i', {\n    class: 'far fa-times-circle',\n  });\n\n  const quitElemText = elementCreator(\n    'p',\n    {\n      class: '.quit-game-text',\n    },\n    'Quit Game',\n  );\n\n  const quitGameButton = elementCreator(\n    'div',\n    { class: 'quit-game' },\n    quitElemText,\n    quitElem,\n  );\n\n  return quitGameButton;\n}\n","class QuestionGenerator {\n  static generateRandomId(amountOfId) {\n    const minId = 0;\n    return Math.floor(Math.random() * (amountOfId - minId + 1) + minId);\n  }\n\n  static generateQuestionsForCurrentMode(amountOfId) {\n    const amountOfAnswersPerQuestion = 4;\n    const generatedIds = [];\n\n    if (\n      amountOfId < amountOfAnswersPerQuestion ||\n      typeof amountOfId !== `number`\n    ) {\n      throw Error`Check amout of ID's and datatype. amountOfId must be greater or equal ${amountOfAnswersPerQuestion}. Passed value: ${amountOfId}, Type must be number. Passed type: ${typeof amountOfId}`;\n    }\n\n    for (let index = 0; index < amountOfAnswersPerQuestion; index += 1) {\n      let id;\n      do {\n        id = QuestionGenerator.generateRandomId(amountOfId);\n      } while (generatedIds.includes(id) === true);\n      generatedIds.push(id);\n    }\n\n    return generatedIds;\n  }\n\n  static chooseCorrectAnswer(arrayWithId = []) {\n    arrayWithId.forEach((element) => {\n      if (typeof element !== 'number') {\n        throw Error`wrong datatype in array`;\n      }\n    });\n\n    if (arrayWithId.length !== 4) {\n      throw Error`4 elements needed. That array has ${arrayWithId.length} elements`;\n    } else {\n      const minIndex = 0;\n      const maxIndex = 3;\n      const index = Math.floor(\n        Math.random() * (maxIndex - minIndex + 1) + minIndex,\n      );\n      const rightAnswer = arrayWithId[index];\n      return rightAnswer;\n    }\n  }\n}\n\nexport default QuestionGenerator;\n","import { HOGWART_HOUSES } from '../data/consts.js';\n\nclass DataManager {\n  constructor(\n    resourceAPIadress,\n    idOfRightAnswer,\n    answerProperty,\n    imgSubfolder,\n    IDsArray = [],\n  ) {\n    this.idOfRightAnswer = idOfRightAnswer;\n    this.resourceAPIadress = resourceAPIadress;\n    this.answerProperty = answerProperty;\n    this.imgSubfolder = imgSubfolder;\n    this.IDsArray = IDsArray;\n    this.arraywithHPObjects = [];\n    this.rightAnswer = '';\n    this.base64dataImg = '';\n    this.arraywithAnswersForQuestion = [];\n  }\n\n  getDataForMode() {\n    return this.arraywithHPObjects;\n  }\n\n  getDataForIDs(arraywithHPObjects) {\n    let arrayWithAnswers = [];\n    if (this.answerProperty === 'house') {\n      arrayWithAnswers = HOGWART_HOUSES;\n    } else {\n      this.IDsArray.forEach((element) => {\n        const obj = arraywithHPObjects[element];\n        const { name } = obj;\n        arrayWithAnswers.push(name);\n      });\n    }\n\n    return arrayWithAnswers;\n  }\n\n  async blobToBase64(blob) {\n    return new Promise((resolve, _) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  async getDataForCorrectAnswer() {\n    const obj = this.arraywithHPObjects[this.idOfRightAnswer];\n    if (this.answerProperty === 'house') {\n      this.rightAnswer = obj.house;\n    } else {\n      this.rightAnswer = obj.name;\n    }\n    const imgFromFile = await fetch(\n      `./img/images/${this.imgSubfolder}/${this.idOfRightAnswer}.jpg`,\n    );\n    const imgBlob = await imgFromFile.blob();\n\n    this.base64dataImg = await this.blobToBase64(imgBlob);\n  }\n\n  async getDataByAPI() {\n    try {\n      if (\n        this.arraywithHPObjects !== null &&\n        this.arraywithHPObjects !== undefined &&\n        this.arraywithHPObjects.length !== 0\n      ) {\n        this.arraywithAnswersForQuestion = this.getDataForIDs(this.IDsArray);\n\n        await this.getDataForCorrectAnswer();\n      } else {\n        const response = await fetch(this.resourceAPIadress);\n        const jsonData = await response.json();\n        this.arraywithHPObjects = jsonData;\n        this.arraywithAnswersForQuestion = this.getDataForIDs(\n          this.arraywithHPObjects,\n        );\n\n        await this.getDataForCorrectAnswer();\n      }\n    } catch (error) {\n      throw Error(`${error}`);\n    }\n  }\n}\n\nexport default DataManager;\n","/* eslint-disable import/extensions */\nimport QuestionGenerator from './questionGenerator.js';\nimport DataManager from './dataManager.js';\nimport { GAME_MODES } from '../data/consts.js';\n\nclass MainQuestionManager {\n  constructor(gameModesProperty) {\n    this.urlAdress = GAME_MODES[gameModesProperty].urlAdress;\n    this.amountOfIDs = GAME_MODES[gameModesProperty].ids;\n    this.answerProperty = GAME_MODES[gameModesProperty].answerProperty;\n    this.imgSubfolder = GAME_MODES[gameModesProperty].imgSubfolder;\n    this.arrayWithObjectsForMode = [];\n  }\n\n  async getQuestion() {\n    const arrayWithID = QuestionGenerator.generateQuestionsForCurrentMode(\n      this.amountOfIDs,\n    );\n    const idOfCorrectAnswer =\n      QuestionGenerator.chooseCorrectAnswer(arrayWithID);\n\n    const dataManager = new DataManager(\n      this.urlAdress,\n      idOfCorrectAnswer,\n      this.answerProperty,\n      this.imgSubfolder,\n      arrayWithID,\n    );\n    await dataManager.getDataByAPI();\n    const { arraywithAnswersForQuestion, rightAnswer, base64dataImg } =\n      dataManager;\n    this.arrayWithObjectsForMode = dataManager.getDataForMode();\n\n    const question = {\n      image: base64dataImg,\n      answers: arraywithAnswersForQuestion,\n      rightAnswer,\n    };\n\n    return question;\n  }\n\n  getObjectsForMode() {\n    if (this.arrayWithObjectsForMode.length > 0) {\n      return this.arrayWithObjectsForMode;\n    }\n    throw Error(\n      'arrayWithObjectsForMode is empty, lets start the game for the first time',\n    );\n  }\n}\n\nexport default MainQuestionManager;\n","// eslint-disable-next-line import/extensions\nimport { DIFFICULTY_LEVELS } from '../data/consts.js';\n\nexport function calculatePoints(\n  correctAnswersScore,\n  isAnswerCorrect,\n  difficultyLevelsProperty,\n) {\n  let newScore;\n\n  const isMediumMode =\n    difficultyLevelsProperty === DIFFICULTY_LEVELS.medium.level;\n  const isHardMode = difficultyLevelsProperty === DIFFICULTY_LEVELS.hard.level;\n  if (!isMediumMode && !isHardMode) {\n    throw new Error(\n      'wrong difficulty level property or calculatingPoints value',\n    );\n  }\n\n  if (isMediumMode) {\n    newScore = isAnswerCorrect ? correctAnswersScore + 1 : correctAnswersScore;\n  }\n  if (isHardMode) {\n    newScore = isAnswerCorrect\n      ? correctAnswersScore + 1\n      : correctAnswersScore - 1;\n  }\n  return newScore;\n}\nexport default calculatePoints;\n","// eslint-disable-next-line import/extensions\nimport { DIFFICULTY_LEVELS } from '../data/consts.js';\n// eslint-disable-next-line import/extensions\nimport { calculatePoints } from './calculatePoints.js';\n\nexport class Player {\n  constructor() {\n    this.correctAnswersScore = 0;\n    this.detailQuestionData = [];\n  }\n\n  checkAndRegisterAnswer(\n    imageBase64,\n    playerAnswer,\n    correctAnswer,\n    difficultyLevelsProperty,\n  ) {\n    if (!playerAnswer) {\n      throw new Error(\n        'error with given argument: playerAnswer, the value is incorrect, it should be string',\n      );\n    }\n    const isAnswerCorrect = playerAnswer === correctAnswer;\n\n    if (difficultyLevelsProperty !== DIFFICULTY_LEVELS.easy.level) {\n      this.correctAnswersScore = calculatePoints(\n        this.correctAnswersScore,\n        isAnswerCorrect,\n        difficultyLevelsProperty,\n      );\n      this.registerAnswer(\n        imageBase64,\n        correctAnswer,\n        playerAnswer,\n        isAnswerCorrect,\n      );\n    }\n    return isAnswerCorrect;\n  }\n\n  registerAnswer(imageBase64, correctAnswer, playerAnswer, isAnswerCorrect) {\n    this.detailQuestionData.push({\n      imageBase64,\n      playerAnswer,\n      isAnswerCorrect,\n      answer: correctAnswer,\n    });\n  }\n\n  clearGameData() {\n    this.correctAnswersScore = 0;\n    this.detailQuestionData.length = 0;\n  }\n\n  getPlayerEndGameData() {\n    return {\n      correctAnswersScore: this.correctAnswersScore,\n      detailQuestionData: this.detailQuestionData,\n    };\n  }\n}\n\nexport default Player;\n","// eslint-disable-next-line import/extensions\nimport { ONE_SECOND_MILLIS, ONE_MINUTE_SECONDS } from '../data/consts.js';\n\nclass GameTimer {\n  constructor(gameTime) {\n    this.gameTime = gameTime;\n    this.stopGame = false;\n  }\n\n  setGameTime(newGameTime) {\n    this.gameTime = newGameTime;\n  }\n\n  runTimer(callbackOnInterval, callbackOnEndOfTime) {\n    this.stopGame = false;\n    const initialTimeInMilisec =\n      this.gameTime * ONE_MINUTE_SECONDS * ONE_SECOND_MILLIS;\n    const totalTimeInSec = this.gameTime * ONE_MINUTE_SECONDS;\n    const timeInterval = ONE_SECOND_MILLIS;\n    let timeLeft = initialTimeInMilisec;\n\n    const timer = setInterval(() => {\n      if (this.stopGame === true) {\n        clearInterval(timer);\n        timeLeft = initialTimeInMilisec;\n      } else if (timeLeft <= 0) {\n        clearInterval(timer);\n        timeLeft = initialTimeInMilisec;\n        callbackOnEndOfTime();\n      } else {\n        timeLeft -= timeInterval;\n        const timeLeftInSec = timeLeft / ONE_SECOND_MILLIS;\n        callbackOnInterval(timeLeftInSec, totalTimeInSec);\n      }\n    }, timeInterval);\n  }\n}\nexport default GameTimer;\n","/* eslint-disable import/extensions */\n/* eslint-disable import/named */\nimport MainQuestionManager from './mainQuestionManager.js';\nimport { Player } from './player.js';\nimport GameTimer from './timer.js';\nimport { DIFFICULTY_LEVELS, DEFAULT_TIME } from '../data/consts.js';\n\nclass GameMaker {\n  constructor(gameModesProperty, difficultyLevelsProperty) {\n    this.mainQuestionManager = new MainQuestionManager(gameModesProperty);\n    this.difficultyLevelsProperty = difficultyLevelsProperty;\n    this.timer = new GameTimer(DEFAULT_TIME);\n    this.player = new Player();\n    this.initialGameTimeMinutes = 2;\n    this.objectsForMode = [];\n    this.questionObject = {};\n  }\n\n  async createQuestion() {\n    this.questionObject = await this.mainQuestionManager.getQuestion();\n    if (this.objectsForMode.length === 0) {\n      this.objectsForMode = this.mainQuestionManager.arrayWithObjectsForMode;\n    }\n    return this.questionObject;\n  }\n\n  createPlayerAndRunTimer(callbackOnInterval, callbackOnEndOfTime) {\n    this.player = new Player();\n    if (DIFFICULTY_LEVELS[this.difficultyLevelsProperty].time !== null) {\n      this.timer = new GameTimer(\n        DIFFICULTY_LEVELS[this.difficultyLevelsProperty].time,\n      );\n      this.timer.runTimer(callbackOnInterval, callbackOnEndOfTime);\n    }\n  }\n\n  checkAndRegisterAnswer(answer) {\n    const isAnswerCorrect = this.player.checkAndRegisterAnswer(\n      this.questionObject.image,\n      answer,\n      this.questionObject.rightAnswer,\n      this.difficultyLevelsProperty,\n    );\n    return isAnswerCorrect;\n  }\n\n  getEndGameData() {\n    const playerQuestionData = this.player.getPlayerEndGameData();\n    return {\n      correctAnswerScore: playerQuestionData.correctAnswersScore,\n      detailQuestionData: playerQuestionData.detailQuestionData,\n      askedQuestions: playerQuestionData.detailQuestionData.length,\n    };\n  }\n\n  clearCurrentGameData() {\n    this.player.clearGameData();\n    this.timer.stopGame = true;\n  }\n}\n\nexport default GameMaker;\n","import Model from './app/logic/model';\nimport View from './app/view/view';\nimport Controller from './app/controller/controller';\n\n// create new class instance for our model\nconst model = new Model();\n\n// create new class instance for our view\nconst view = new View();\n\n// create new class instance for our app\nconst app = new Controller(model, view);\n\n// loading our site in webbrowser\nwindow.onload = () => app;\n\n// we can control from console our app\nwindow.app = app;\n","import GameMaker from '../logic/gameMaker';\nimport { DIFFICULTY_LEVELS, GAME_MODES } from '../data/consts';\n\nclass Controller {\n  constructor(model, view) {\n    this.model = model;\n    this.view = view;\n    this.endGameData = {};\n\n    // this.view.renderModal();\n    this.view.renderInitialScreen();\n    this.bindModeButtons();\n\n    // TODO: przeniesienie bindowania Settings do controllera this.view.bindSettingsButton(this.view.toggleSettingsView);\n  }\n\n  doAtInterval = (timeInSeconds, initialTime) => {\n    this.view.renderTimer(timeInSeconds, initialTime);\n  };\n\n  doAtEnd = () => {\n    this.endGameData = this.model.gameMaker.getEndGameData();\n    this.view.renderModal(this.endGameData);\n    this.view.bindModalButton(this.saveName);\n    this.view.appearBackgroundAndButtons();\n    this.view.renderAfterQuitGame();\n  };\n\n  saveName = (name) => {\n    this.model.name = name;\n    this.saveResult();\n  };\n\n  startGame = async () => {\n    this.model.gameMaker = new GameMaker(\n      this.model.gameMode,\n      this.model.difficultyLevel,\n    );\n    this.model.gameMaker.createPlayerAndRunTimer(\n      this.doAtInterval,\n      this.doAtEnd,\n    );\n    const closure = this;\n    await closure.showQuestion();\n    this.view.disappearButtonsAndBackground();\n    this.view.renderQuitGame();\n    this.view.bindQuitGameButton(this.doAfterQuitGame);\n    this.view.changeCursorToCustom();\n    this.view.changeGridSizes();\n    this.view.changeNavStyles();\n  };\n\n  doAfterQuitGame = () => {\n    this.model.gameMaker.clearCurrentGameData();\n    this.changeGameMode(GAME_MODES[this.model.gameMode].gamemode.toLowerCase());\n    this.view.appearBackgroundAndButtons();\n    this.view.renderAfterQuitGame(this.model.difficultyLevel);\n  };\n\n  async showQuestion() {\n    const { question } = GAME_MODES[this.model.gameMode.toLowerCase()];\n    this.view.renderQuestion(\n      await this.model.gameMaker.createQuestion(),\n      question,\n    );\n    const closure = this;\n    this.view.bindAnswerButtons(async (answer) => {\n      const isAnswerCorrect =\n        closure.model.gameMaker.checkAndRegisterAnswer(answer);\n      this.view.changeAnswrBtnBgColor(isAnswerCorrect);\n      await closure.showQuestion();\n    });\n  }\n\n  changeGameMode = (mode) => {\n    const level = this.model.difficultyLevel;\n    this.model.gameMode = mode.toLowerCase();\n    if (this.view.toggleRulesHof === 'hall of fame') {\n      this.view.showViewsForChosenMode(mode, level);\n      this.bindInitialHofAndPlay();\n    } else {\n      this.showHofView();\n    }\n  };\n\n  toggleRulesHof = () => {\n    if (this.view.toggleRulesHof === 'hall of fame') {\n      this.showHofView();\n      this.view.toggleRulesHof = 'rules';\n    } else if (this.view.toggleRulesHof === 'rules') {\n      this.showRulesForChosenMode();\n      this.view.toggleRulesHof = 'hall of fame';\n    }\n  };\n\n  bindInitialHofAndPlay = () => {\n    this.view.bindHofButton(this.toggleRulesHof);\n    this.view.bindButtonPlay(this.startGame);\n  };\n\n  bindInitialRulesAndPlay = () => {\n    this.view.bindRulesButton(this.toggleRulesHof);\n    this.view.bindButtonPlay(this.startGame);\n  };\n\n  changeDifficultyLevel = (difficultyLevelIndex) => {\n    const levels = Object.keys(DIFFICULTY_LEVELS);\n    const level = levels[difficultyLevelIndex];\n    this.model.difficultyLevel = DIFFICULTY_LEVELS[level].level;\n  };\n\n  showSettingsScreen() {\n    this.view.showSettings();\n  }\n\n  updateViewsForHallOfFameAtChosenMode(mode) {\n    this.view.updateViewsForHallOfFameAtChosenMode(mode);\n  }\n\n  saveResult() {\n    const { rankings, name, gameMode, difficultyLevel } = this.model;\n    const result = this.endGameData.correctAnswerScore;\n    const mode = `${gameMode}_${difficultyLevel}`;\n\n    rankings[mode].push({ name, result });\n    rankings[mode].sort((a, b) => (a.result < b.result ? 1 : -1));\n    if (rankings[mode].length > 3) rankings[mode].pop();\n    this.model.localStorageService.saveRankings(rankings);\n  }\n\n  showHofView = () => {\n    this.view.showHof(this.model.gameMode, this.model.difficultyLevel);\n    this.bindInitialRulesAndPlay();\n  };\n\n  showRulesForChosenMode = () => {\n    this.view.showViewsForChosenMode(this.model.gameMode);\n    this.view.bindModeButtons(this.changeGameMode);\n    this.bindInitialHofAndPlay();\n  };\n\n  bindModeButtons = () => {\n    this.view.bindModeButtons(this.changeGameMode);\n  };\n}\nexport default Controller;\n"],"names":["$c35e77808c57d5e5$export$6503ec6e8aabbaf","$c35e77808c57d5e5$export$f7ad0328861e2f03","$c35e77808c57d5e5$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$9a68040fdd6a5d14$export$d155b7b3d8e33c99","students","gamemode","imgSubfolder","question","urlAdress","ids","answerProperty","staff","houses","$9a68040fdd6a5d14$export$3fc28146537f1a7e","students_medium","name","result","students_hard","staff_medium","staff_hard","houses_medium","houses_hard","$9a68040fdd6a5d14$export$52edf5adb416f386","$9a68040fdd6a5d14$export$14409bccc772bf0b","easy","time","level","medium","hard","$aaedfb2f3e20c393$export$2e2bcd8739ae039","rankings","localStorage","setItem","stringify","getItem","this","saveRankings","$dc85849e18c13193$export$2e2bcd8739ae039","gameMode","difficultyLevel","loadRankings","localStorageService","gameMaker","undefined","obj","key","value","defineProperty","enumerable","configurable","writable","$f67e5d9b3b3da99d$export$2e2bcd8739ae039","parentElement","children","forEach","child","appendChild","document","createTextNode","$c45bbe62ab951b57$export$2e2bcd8739ae039","type","attributes","newElement","createElement","entries","setAttribute","$9d1cb5c76d4fc40b$export$2e2bcd8739ae039","mode","style","$4123d7a94a0ce51a$var$imageNode","$4123d7a94a0ce51a$export$2e2bcd8739ae039","imageSource","altDescription","image","class","alt","ref","test","$4123d7a94a0ce51a$var$updateImage","$ce8c893273d8207d$export$2e2bcd8739ae039","$9686bfed4309afbb$exports","URL","resolve","import","meta","url","toString","$f060898ab7ff3c60$export$2e2bcd8739ae039","src","$parcel$interopDefault","$66ec86324a1894da$export$2e2bcd8739ae039","gameData","table","gameDetails","detailQuestionData","answersRows","element","playerAnswer","answer","imageBase","imageBase64","imageCell","correctAnswer","newRow","push","getAnswersRows","tableBody","tableHeadersElements","map","header","tableHeadRow","tableHead","$397c1c97b4e6bbf3$export$2e2bcd8739ae039","detailsHeader","modalTab","$46c5308ecb1f5290$export$2e2bcd8739ae039","modalInput","placeholder","required","playerFormLabel","for","modalButton","modalFormBuilder","$fd3430c25aa92fae$export$2e2bcd8739ae039","modalHeader","modalText","playerPoints","correctAnswerScore","questions","askedQuestions","text","$fd3430c25aa92fae$var$chooseText","detailsContainer","modalFormContainer","modalContainer","$27469cde3cce25d1$export$2e2bcd8739ae039","rulesIcon","$0d81d60c512eea08$export$2e2bcd8739ae039","$8abc3b6a0f3307c8$exports","$00a46406d4ed0cf5$export$2e2bcd8739ae039","$e683ff84e12f47a7$export$2e2bcd8739ae039","imageCup","$6d39b02bec26f417$export$2e2bcd8739ae039","place","property","hofData","arrStudents","students_easy","arrHouses","houses_easy","arrStaff","staff_easy","_mode","toLowerCase","_level","selectedLevel","selectedMode","selectedPlace","$e405632f7d43ba12$var$getPlayerNameOrDefaultName","$e405632f7d43ba12$export$2e2bcd8739ae039","tableHead1","tableHead2","tableHead3","tableRow1stPlace","tableRow2ndPlace","tableRow3rdPlace","$05a8d2dad15724f3$export$2e2bcd8739ae039","cupIcon","$9dbadb5ed5d3af8b$export$2e2bcd8739ae039","timeInSeconds","min","Math","floor","sec","timer","color","innerText","$af79f865dd4adbc3$export$2e2bcd8739ae039","$85b1a16a35b6ddda$export$2e2bcd8739ae039","buttons","answers","button","index","$64bc5083936cbf09$export$2e2bcd8739ae039","array","item","classList","remove","$c9cb38199094e728$exports","$6549758724ef564c$export$2e2bcd8739ae039","$e602ea4e6d99a514$export$2e2bcd8739ae039","$c43bf56518c061c4$export$2e2bcd8739ae039","render","query","parentElem","querySelector","innerHTML","renderInitialScreen","showRulesButtons","$7c04b3b30270d5d0$export$2e2bcd8739ae039","showSettings","settingsButton","addEventListener","toggleSettingsView","bindDifficultyLevelButton","window","app","changeDifficultyLevel","hideSettings","showViewsForChosenMode","model","bindInitialHofAndPlay","toggleRulesHof","renderTimer","initialTime","timeLeft","timeStart","timerWrapper","wandInner","wand","fullWand","width","progressWidth","$2e5aff937caafa70$export$2e2bcd8739ae039","renderModal","renderImage","changeAnswrBtnBgColor","posAnswrBtn","querySelectorAll","el","add","renderQuitGame","quitElem","quitElemText","$e360fe1ae13c5f63$export$2e2bcd8739ae039","renderQuestion","modeQuestion","disappearButtonsAndBackground","display","appearBackgroundAndButtons","removeClassFromHtmlElement","removeAttributeFromHtmlElement","changeCursorToCustom","changeGridSizes","gridTemplateRows","changeNavStyles","justifyContent","renderAfterQuitGame","timerWand","timerText","attribute","removeAttribute","querySelector1","classNameWithoutDot","bindButtonPlay","handler","bindModeButtons","handler1","textContent","bindAnswerButtons","handler2","getElementsByClassName","bindQuitGameButton","handler3","bindHofButton","handler4","bindRulesButton","handler5","handler6","bindModalButton","handler7","modal","getElementById","settings","$96b3850a40b17fbd$var$QuestionGenerator","amountOfId","random","amountOfId1","generatedIds","generateRandomId","includes","arrayWithId","minIndex","maxIndex","$96b3850a40b17fbd$export$2e2bcd8739ae039","$2468bcd188b7fe26$export$2e2bcd8739ae039","getDataForMode","arraywithHPObjects","getDataForIDs","arrayWithAnswers","IDsArray","blob","Promise","_","reader","FileReader","onloadend","readAsDataURL","idOfRightAnswer","rightAnswer","house","imgFromFile","fetch","imgBlob","base64dataImg","blobToBase64","arraywithAnswersForQuestion","getDataForCorrectAnswer","response","resourceAPIadress","jsonData","json","error","$326e511440bdc611$export$2e2bcd8739ae039","arrayWithID","generateQuestionsForCurrentMode","amountOfIDs","idOfCorrectAnswer","chooseCorrectAnswer","dataManager","getDataByAPI","arrayWithObjectsForMode","getObjectsForMode","gameModesProperty","$488a7f3ee966fcf2$export$76516b9df4db4980","correctAnswersScore","isAnswerCorrect","difficultyLevelsProperty","newScore","isMediumMode","isHardMode","$00d8e780c5b05418$export$2616165974278734","checkAndRegisterAnswer","registerAnswer","imageBase641","correctAnswer1","playerAnswer1","clearGameData","getPlayerEndGameData","$4861753395eb283d$export$2e2bcd8739ae039","setGameTime","newGameTime","gameTime","runTimer","callbackOnInterval","callbackOnEndOfTime","stopGame","initialTimeInMilisec","totalTimeInSec","setInterval","clearInterval","$de3c986550c109d7$export$2e2bcd8739ae039","questionObject","mainQuestionManager","getQuestion","objectsForMode","createPlayerAndRunTimer","player","getEndGameData","playerQuestionData","clearCurrentGameData","initialGameTimeMinutes","$73d28f0116ce9883$var$app","view","createQuestion","closure","async","showQuestion","showSettingsScreen","updateViewsForHallOfFameAtChosenMode","mode1","saveResult","endGameData","sort","a","b","pop","saveName","doAtInterval","doAtEnd","doAfterQuitGame","changeGameMode","showHofView","showRulesForChosenMode","startGame","difficultyLevelIndex","showHof","bindInitialRulesAndPlay","onload"],"version":3,"file":"index.9a4583ab.js.map"}